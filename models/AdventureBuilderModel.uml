<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_RhFsAJxsEeuSfsyhIF5DRw" name="AdventureBuilderSystem" URI="">
  <ownedComment xmi:type="uml:Comment" xmi:id="_-p1m4KEFEeuot_tjXed89A">
    <body>https://wiki.sei.cmu.edu/confluence/display/SAD/Adventure+Builder+Data+Model


Rationale
   * We have chosen a Service Oriented Architecture for the Adventure Builder because we desire a high degree of interoperability between internal and external entities in the system. This gives us a great deal of flexibility in terms of implementation platforms.
      * For example, the Airline Provider component may be implemented using Java, PHP, .NET, IBM CICS or any other technology that supports SOAP web services.
      * Internally, it's possible, for example, to reimplement and deploy Consumer Website using .NET. OPC doesn't have to change because the SOAP Web services communication allows such level of interoperability.
   * We have also a clear separation between the user interface and the business logic. The Consumer Website (user interface) and OPC (business logic) are two separate applications that together implement the functionality described in the System Overview.
   * We chose to implement the service registry using a simple data repository because of ease of implementation. Creating a UDDI registry was an alternative that was rejected because it would bring increased complexity with no apparent benefit, given that the repository is only queried internally (using a standard format is more relevant when the registry will be accessed by external players).</body>
  </ownedComment>
  <packagedElement xmi:type="uml:Model" xmi:id="_FJkKUKF9Eeu26-oh2DfeGg" name="3-C&amp;C">
    <ownedComment xmi:type="uml:Comment" xmi:id="_USJqYKqOEeu804Hdqgji2A">
      <body>Composant &amp; Connector views
</body>
    </ownedComment>
    <packagedElement xmi:type="uml:Component" xmi:id="_PpLlkKIGEeuZV_N0fPslHQ" name="BankProvider">
      <ownedComment xmi:type="uml:Comment" xmi:id="_mXFrcKIHEeu6gtGP4fC_Vw">
        <body>This component represents an external application hosted by a bank or credit card administrator. The application provides a SOAP web service to verify customers' credit card information.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_hYOysKIxEeuQ_fGpHvaisg" name="bankProviderPort" type="_s6MaAKIxEeuQ_fGpHvaisg" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_uTu_0KIxEeuQ_fGpHvaisg" name="iCreditCardService" type="_s6MaAKIxEeuQ_fGpHvaisg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_wDV8QKIxEeuQ_fGpHvaisg" name="CrediitCardServiceAdapter"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Component" xmi:id="_Va-lEKIGEeuZV_N0fPslHQ" name="ActivityBookingProvider"/>
    <packagedElement xmi:type="uml:Component" xmi:id="_GnNOwKIGEeuZV_N0fPslHQ" name="AdvendureOPCDB">
      <ownedComment xmi:type="uml:Comment" xmi:id="_jKOt4KIHEeu6gtGP4fC_Vw">
        <body>This relational database stores purchase orders, invoices coming from the external suppliers and related information. The database server is MySQL configured to use the InnoDB engine.

Variability guide 
To configure data storage such that it supports different database vendors, we don't want to use any SQL statements in our queries that use vendor specific syntax and can potentially hinder migrating databases. We also use the DAO pattern to abstract away clients from accessing data directly.
</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Component" xmi:id="_ttuMsKIFEeuZV_N0fPslHQ" name="AdventureCatalogDB">
      <ownedComment xmi:type="uml:Comment" xmi:id="_iJHPIKIHEeu6gtGP4fC_Vw">
        <body>This is a relational database that stores the adventure builder catalog containing various adventure packages. It also stores information about users for user authentication and authorization. The database server is MySQL Cluster 7.0 configured to use the InnoDB engine.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Component" xmi:id="_RFbhIKIGEeuZV_N0fPslHQ" name="AirlineBookingProvider">
      <ownedComment xmi:type="uml:Comment" xmi:id="_nJW14KIHEeu6gtGP4fC_Vw">
        <body>This component represents an external application hosted by an airline partner company. The application provides a SOAP web service to book air travel.
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_UjrjIKImEeuQ_fGpHvaisg" name="airlineBookingProviderPort" type="_km7K0KIGEeuZV_N0fPslHQ" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_EY_cMKIxEeuQ_fGpHvaisg" name="iAirlineBookingService" type="_km7K0KIGEeuZV_N0fPslHQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_EzpX4KIxEeuQ_fGpHvaisg" name="airlineBookingAdapter" type="__hN18KIlEeuQ_fGpHvaisg"/>
      <packagedElement xmi:type="uml:Realization" xmi:id="_Ffpm8KqwEeuRiIRzpnEATQ" client="_EzpX4KIxEeuQ_fGpHvaisg" supplier="_EY_cMKIxEeuQ_fGpHvaisg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Component" xmi:id="_o1SeIKIFEeuZV_N0fPslHQ" name="ConsumerWebsite">
      <packagedElement xmi:type="uml:Usage" xmi:id="_T9U8AKqxEeuKYIiqG3jlgQ" client="_o1SeIKIFEeuZV_N0fPslHQ" supplier="_ttuMsKIFEeuZV_N0fPslHQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Component" xmi:id="_USCAAKIGEeuZV_N0fPslHQ" name="LodgingBookingProvider">
      <ownedComment xmi:type="uml:Comment" xmi:id="_n8h_QKIHEeu6gtGP4fC_Vw">
        <body>This component represents an external application hosted by a lodging partner company. The application provides a SOAP web service to book hotel rooms.
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_YW44kKIyEeuQ_fGpHvaisg" name="iLodgingBookingService" type="_KFQmAKIyEeuQ_fGpHvaisg"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_YW6GuKIyEeuQ_fGpHvaisg" name="lodgingBookingServiceAdapter" type="_PWCjIKIyEeuQ_fGpHvaisg"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_eZ8AIKIyEeuQ_fGpHvaisg" name="lodgingBookingProviderPort" type="_KFQmAKIyEeuQ_fGpHvaisg" aggregation="composite"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Component" xmi:id="_IrKDgKIGEeuZV_N0fPslHQ" name="ServiceRegistry">
      <ownedComment xmi:type="uml:Comment" xmi:id="_j1ppcKIHEeu6gtGP4fC_Vw">
        <body>Data repository that works as a basic registry of the external services used by OPC. More specifically, it has name, location and metadata about all the SOAP web services offered by the banks, airline, lodging, and activity external partners. TBD: use a relational database or XML based files.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Component" xmi:id="_unUu4KqwEeuKYIiqG3jlgQ" name="WebBrowser">
      <packagedElement xmi:type="uml:Usage" xmi:id="_0lBcYKqwEeuKYIiqG3jlgQ" client="_unUu4KqwEeuKYIiqG3jlgQ" supplier="_o1SeIKIFEeuZV_N0fPslHQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Component" xmi:id="_wUrokKqwEeuKYIiqG3jlgQ" name="UserEmailClient"/>
    <packagedElement xmi:type="uml:Component" xmi:id="_noKoUKtIEeuzU4l5X74wYQ" name="OPC">
      <ownedComment xmi:type="uml:Comment" xmi:id="_noKoUatIEeuzU4l5X74wYQ">
        <body>OPC is the order processing center application. It's a Java EE application that communicates with external components using SOAP web services.Internally, it consists of loosely coupled EJBs that communicate with each other using primarily asynchronous messaging. The internal architecture follows the message channel design pattern [Hohpe 2003]. See the OPC C&amp;C View for a description of the internal components of OPC. The core functionality of the Adventure Builder is implemented in this module. Its major functions are:

   - Accept purchase order requests from the ConsumerWebsite for processing.
   - Fill  a purchase order by communicating with external suppliers.
   - Provide a mechanism for the Consumer Website to query the current status of a purchase order.
   - Upon completion of processing a purchase order, send an email to the customer reporting its success or failure.

OPC provides the following interfaces, which are exposed as SOAP web services:
   * OpcPurchaseOrderService - used to create a purchase order.
   * OpcOrderTrackingService - used to track the status of a purchase order.
   * WebServiceBroker - used by external suppliers to submit invoices back to OPC.

OPC requires the following interfaces, which are provided by external partners as SOAP web services:

   * CreditCardService - used to validate the credit card transaction with a bank.
   * AirlinePOService - used to send purchase orders to external airline suppliers.
   * LodgingPOService - used to send purchase orders to external lodging suppliers.

ActivityPOService - used to send purchase orders to external activity suppliers.

The UML activity diagram below shows the processing of a purchase order. It uses a split-and-join pattern when filling an order. For simplicity, the diagram does not show interaction with a database. Following is the equivalent diagram using the BPMN notation.


TODO: implement activity diagram https://wiki.sei.cmu.edu/confluence/display/SAD/Top+Level+SOA+View
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_noKoUqtIEeuzU4l5X74wYQ" name="SmtpPort" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_noKoU6tIEeuzU4l5X74wYQ" name="IWebServiceBrokerPort" aggregation="composite">
        <type xmi:type="uml:Interface" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_WHhQAKBbEeuTlOifvX46DQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_noKoVKtIEeuzU4l5X74wYQ" name="JdbcPort" type="_noKotqtIEeuzU4l5X74wYQ" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_noKoVatIEeuzU4l5X74wYQ" name="DataAccessIntegrityPort" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_noKoVqtIEeuzU4l5X74wYQ" name="OpcOrderTrackingServicePort" type="_noKocqtIEeuzU4l5X74wYQ" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_noKoV6tIEeuzU4l5X74wYQ" name="OpcPurchaseOrderServicePort" type="_noKobqtIEeuzU4l5X74wYQ" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_noKoWKtIEeuzU4l5X74wYQ" name="AirlinePoServicePort" aggregation="composite">
        <type xmi:type="uml:Interface" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_km7K0KIGEeuZV_N0fPslHQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_noKoWatIEeuzU4l5X74wYQ" name="LodgingPoServicePort" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_noKoWqtIEeuzU4l5X74wYQ" name="activityBookingServicePort" aggregation="composite">
        <type xmi:type="uml:Interface" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_cto4YKIcEeuQ_fGpHvaisg"/>
      </ownedAttribute>
      <nestedClassifier xmi:type="uml:Actor" xmi:id="_noKoW6tIEeuzU4l5X74wYQ" name="Vacationer">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKoXKtIEeuzU4l5X74wYQ">
          <body>The user can visit the Adventure Builder Web site and browse the catalog of travel packages, which include flights to specific destinations, lodging options, and activities that can be purchased in advance. Activities include mountain biking, fishing, surfing classes, hot air balloon tours, and scuba diving. The user can select transportation, accommodation, and various activities to build his/her own adventure trip.

The user can place an order for a vacation package. To process this order, the system has to interact with several external entities. A bank will approve the customer payment, airline companies will provide the flights, lodging providers will book the hotel rooms, and businesses that provide vacation activities will schedule the activities selected by the customer.

After an order is placed, the user can return to check the status of his/her order. This is necessary because some interactions with external entities are processed in the background and may take hours or days to complete.

The internal system periodically interacts with its business partners (transportation, lodging, and activity providers) to update the catalog with the most recent offerings.</body>
        </ownedComment>
      </nestedClassifier>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKoXatIEeuzU4l5X74wYQ" name="CRMBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKoXqtIEeuzU4l5X74wYQ">
          <body>This component is used for customer relationship management. For this application it is only used to communicate with the user. It reads messages from a queue, creates the corresponding email messages according to templates and I18N requirements, and sent them to users.</body>
        </ownedComment>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_noKoX6tIEeuzU4l5X74wYQ" name="sendMessage">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_noKoYKtIEeuzU4l5X74wYQ" name="messageStr">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKoYatIEeuzU4l5X74wYQ" client="_noKoXatIEeuzU4l5X74wYQ" supplier="_noKoUqtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKoYqtIEeuzU4l5X74wYQ" name="BrokerRequestorBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKoY6tIEeuzU4l5X74wYQ">
          <body>This message driven bean makes requests to external suppliers. It requires the following interfaces:
   - AirlinePOService - This is used to send purchaseorders to external airline suppliers.
   - ActivityPOService - This is used to send purchaseorders to external activity suppliers.
   - LodgingPOService - This is used to send purchaseorders to external lodging suppliers.</body>
        </ownedComment>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKoZKtIEeuzU4l5X74wYQ" client="_noKoYqtIEeuzU4l5X74wYQ" supplier="_noKoWqtIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKoZatIEeuzU4l5X74wYQ" client="_noKoYqtIEeuzU4l5X74wYQ" supplier="_noKoVatIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKoZqtIEeuzU4l5X74wYQ" client="_noKoYqtIEeuzU4l5X74wYQ" supplier="_noKoWKtIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKoZ6tIEeuzU4l5X74wYQ" client="_noKoYqtIEeuzU4l5X74wYQ" supplier="_noKoWatIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKoaKtIEeuzU4l5X74wYQ" name="OrderFillerBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKoaatIEeuzU4l5X74wYQ">
          <body>his component is used to process the purchaseorder. It reads the purchaseorder and splits it into smaller purchaseorders, one each for activities, transportation and lodging. It then sends each of these smaller purchaseorders to the webservicebroker that in turn sends them to external suppliers.
   - It provides an interface called sendPO that is used by the workflowmanager to send purchaseorders.
   - It requires an interface sendRequest that it uses to send purchaseorders to each individual supplier.</body>
        </ownedComment>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKoaqtIEeuzU4l5X74wYQ" client="_noKoaKtIEeuzU4l5X74wYQ" supplier="_noKokKtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKoa6tIEeuzU4l5X74wYQ" name="POEndpointBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKobKtIEeuzU4l5X74wYQ">
          <body>This stateless session bean implements the SOAP web services interface called OpcPurchaseOrderService. When a purchase order request arrives, it simply validates the order and, if OK, sends the order to the WorkFlowMgrQueue using JMS.</body>
        </ownedComment>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_noKobatIEeuzU4l5X74wYQ" name="submitPurchaseOrder"/>
        <nestedClassifier xmi:type="uml:Interface" xmi:id="_noKobqtIEeuzU4l5X74wYQ" name="IOPCPurchaseOrderService"/>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKob6tIEeuzU4l5X74wYQ" name="IWorkflowMgrQueue" client="_noKoa6tIEeuzU4l5X74wYQ" supplier="_noKolqtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKocKtIEeuzU4l5X74wYQ" name="OTEndpointBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKocatIEeuzU4l5X74wYQ">
          <body>This stateless session bean implements the SOAP web services interface called OpcOrderTrackingService. Requests for information about an order are handled by interacting with ProcessManagerBean. Order information is retrieved using the PurchaseOrderBean entity bean.</body>
        </ownedComment>
        <nestedClassifier xmi:type="uml:Interface" xmi:id="_noKocqtIEeuzU4l5X74wYQ" name="IOPCOrderTrackingService"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKoc6tIEeuzU4l5X74wYQ" client="_noKocKtIEeuzU4l5X74wYQ" supplier="_noKod6tIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKodKtIEeuzU4l5X74wYQ" name="processManagerBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKodatIEeuzU4l5X74wYQ">
          <body>This session bean provides operations to retrieve and update the overall status of a purchase order and the status of the individual supplier orders.
</body>
        </ownedComment>
        <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_noKodqtIEeuzU4l5X74wYQ" client="_noKodKtIEeuzU4l5X74wYQ" supplier="_noKod6tIEeuzU4l5X74wYQ" contract="_noKod6tIEeuzU4l5X74wYQ"/>
        <nestedClassifier xmi:type="uml:Interface" xmi:id="_noKod6tIEeuzU4l5X74wYQ" name="IProcessManagerBean"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKoeKtIEeuzU4l5X74wYQ" client="_noKodKtIEeuzU4l5X74wYQ" supplier="_noKoeatIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKoeatIEeuzU4l5X74wYQ" name="ManagerBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKoeqtIEeuzU4l5X74wYQ">
          <body>This entity bean is used by WorkFlowManagerBean to persist the status of the purchase order containing order id, order overall status, and the status of each separate supplier order.
</body>
        </ownedComment>
        <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_noKoe6tIEeuzU4l5X74wYQ" client="_noKoeatIEeuzU4l5X74wYQ" supplier="_noKofKtIEeuzU4l5X74wYQ" contract="_noKofKtIEeuzU4l5X74wYQ"/>
        <nestedClassifier xmi:type="uml:Interface" xmi:id="_noKofKtIEeuzU4l5X74wYQ" name="IManagerBean"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKofatIEeuzU4l5X74wYQ" client="_noKoeatIEeuzU4l5X74wYQ" supplier="_noKoVKtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKofqtIEeuzU4l5X74wYQ" name="PurchaseOrderBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKof6tIEeuzU4l5X74wYQ">
          <body>This entity bean persists the details of a purchase order (user who placed the order, date of the order, total price, head count, departure and arrival dates, departure city, etc.). The status of the order as it's processed is not stored within this entity bean; it's ManagerBean that keeps the order status.</body>
        </ownedComment>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKogKtIEeuzU4l5X74wYQ" client="_noKofqtIEeuzU4l5X74wYQ" supplier="_noKor6tIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKogatIEeuzU4l5X74wYQ" client="_noKofqtIEeuzU4l5X74wYQ" supplier="_noKoi6tIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKogqtIEeuzU4l5X74wYQ" client="_noKofqtIEeuzU4l5X74wYQ" supplier="_noKotqtIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKog6tIEeuzU4l5X74wYQ" client="_noKofqtIEeuzU4l5X74wYQ" supplier="_noKoVKtIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKohKtIEeuzU4l5X74wYQ" client="_noKofqtIEeuzU4l5X74wYQ" supplier="_noKos6tIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKohatIEeuzU4l5X74wYQ" client="_noKofqtIEeuzU4l5X74wYQ" supplier="_noKoiKtIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKohqtIEeuzU4l5X74wYQ" client="_noKofqtIEeuzU4l5X74wYQ" supplier="_noKomqtIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKoh6tIEeuzU4l5X74wYQ" client="_noKofqtIEeuzU4l5X74wYQ" supplier="_noKorKtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKoiKtIEeuzU4l5X74wYQ" name="TransportationBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKoiatIEeuzU4l5X74wYQ">
          <body>This entity bean persists the details of a flight reservation (e.g., origin, destination, carrier, flight id, departure time, arrival time, travel class, fare)</body>
        </ownedComment>
        <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_noKoiqtIEeuzU4l5X74wYQ" client="_noKoiKtIEeuzU4l5X74wYQ" supplier="_noKoi6tIEeuzU4l5X74wYQ" contract="_noKoi6tIEeuzU4l5X74wYQ"/>
        <nestedClassifier xmi:type="uml:Interface" xmi:id="_noKoi6tIEeuzU4l5X74wYQ" name="ITransportationBean"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKojKtIEeuzU4l5X74wYQ" client="_noKoiKtIEeuzU4l5X74wYQ" supplier="_noKoVKtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKojatIEeuzU4l5X74wYQ" name="CRMQueue">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKojqtIEeuzU4l5X74wYQ">
          <body>Todo</body>
        </ownedComment>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKoj6tIEeuzU4l5X74wYQ" client="_noKojatIEeuzU4l5X74wYQ" supplier="_noKoXatIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKokKtIEeuzU4l5X74wYQ" name="WebServiceBrokerQueue">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKokatIEeuzU4l5X74wYQ">
          <body>Todo</body>
        </ownedComment>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKokqtIEeuzU4l5X74wYQ" client="_noKokKtIEeuzU4l5X74wYQ" supplier="_noKoYqtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKok6tIEeuzU4l5X74wYQ" name="OrderFillerQueue">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKolKtIEeuzU4l5X74wYQ">
          <body>Todo</body>
        </ownedComment>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKolatIEeuzU4l5X74wYQ" client="_noKok6tIEeuzU4l5X74wYQ" supplier="_noKoaKtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKolqtIEeuzU4l5X74wYQ" name="WorkflowMgrQueue">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKol6tIEeuzU4l5X74wYQ">
          <body>Todo</body>
        </ownedComment>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKomKtIEeuzU4l5X74wYQ" client="_noKolqtIEeuzU4l5X74wYQ" supplier="_noKouqtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_noKomatIEeuzU4l5X74wYQ" name="TimerCall" client="_noKoUKtIEeuzU4l5X74wYQ" supplier="_noKouKtIEeuzU4l5X74wYQ"/>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKomqtIEeuzU4l5X74wYQ" name="LodgingBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKom6tIEeuzU4l5X74wYQ">
          <body>This entity bean persists the details of a hotel reservation (hotel id, start date, number of nights, rate per night, number of rooms).
</body>
        </ownedComment>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKonKtIEeuzU4l5X74wYQ" client="_noKomqtIEeuzU4l5X74wYQ" supplier="_noKoVKtIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKonatIEeuzU4l5X74wYQ" client="_noKomqtIEeuzU4l5X74wYQ" supplier="_noKoVKtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKonqtIEeuzU4l5X74wYQ" name="BrokerServiceBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKon6tIEeuzU4l5X74wYQ">
          <body>This component is the OPC's window to external suppliers for activities, lodging and transportation. It provides the following interfaces:
   - WebServiceBroker - This is a web service that is used by the external suppliers to submit invoices back to the OPC.
   - getInvoice - This interface can provide the invoices that are sent by external suppliers.
   - sendRequest - This interface can be used to contact external suppliers and place orders with them.</body>
        </ownedComment>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_noKooKtIEeuzU4l5X74wYQ" name="brokerServiceBean">
          <type xmi:type="uml:Class" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_c_590KIAEeuZV_N0fPslHQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_noKooatIEeuzU4l5X74wYQ" name="iWebServiceBroker1">
          <type xmi:type="uml:Interface" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_WHhQAKBbEeuTlOifvX46DQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_noKooqtIEeuzU4l5X74wYQ" name="iWebServiceBroker2">
          <type xmi:type="uml:Interface" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_WHhQAKBbEeuTlOifvX46DQ"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_noKoo6tIEeuzU4l5X74wYQ" name="brokerServicePort" aggregation="composite">
          <type xmi:type="uml:Interface" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_WHhQAKBbEeuTlOifvX46DQ"/>
        </ownedAttribute>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKopKtIEeuzU4l5X74wYQ" client="_noKonqtIEeuzU4l5X74wYQ" supplier="_noKopatIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKopatIEeuzU4l5X74wYQ" name="BrowerServiceQueue">
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKopqtIEeuzU4l5X74wYQ" client="_noKopatIEeuzU4l5X74wYQ" supplier="_noKolqtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_noKop6tIEeuzU4l5X74wYQ" name="SMTP" client="_noKoUqtIEeuzU4l5X74wYQ">
        <supplier xmi:type="uml:Actor" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_VMQWMJxsEeuSfsyhIF5DRw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_noKoqKtIEeuzU4l5X74wYQ" client="_noKoU6tIEeuzU4l5X74wYQ" supplier="_noKonqtIEeuzU4l5X74wYQ"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_noKoqatIEeuzU4l5X74wYQ" supplier="_noKoUKtIEeuzU4l5X74wYQ">
        <client xmi:type="uml:Model" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_RhFsAJxsEeuSfsyhIF5DRw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_noKoqqtIEeuzU4l5X74wYQ" client="_noKoVqtIEeuzU4l5X74wYQ" supplier="_noKocKtIEeuzU4l5X74wYQ"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_noKoq6tIEeuzU4l5X74wYQ" client="_noKoV6tIEeuzU4l5X74wYQ" supplier="_noKoa6tIEeuzU4l5X74wYQ"/>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKorKtIEeuzU4l5X74wYQ" name="CreditCardBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKoratIEeuzU4l5X74wYQ">
          <body>This entity bean persists the credit card information (credit card number, type, expiration date, etc.) of a user.
</body>
        </ownedComment>
        <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_noKorqtIEeuzU4l5X74wYQ" client="_noKorKtIEeuzU4l5X74wYQ" supplier="_noKor6tIEeuzU4l5X74wYQ" contract="_noKor6tIEeuzU4l5X74wYQ"/>
        <nestedClassifier xmi:type="uml:Interface" xmi:id="_noKor6tIEeuzU4l5X74wYQ" name="IcreditCardBean"/>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKosKtIEeuzU4l5X74wYQ" client="_noKorKtIEeuzU4l5X74wYQ" supplier="_noKoUKtIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKosatIEeuzU4l5X74wYQ" client="_noKorKtIEeuzU4l5X74wYQ" supplier="_noKoVKtIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKosqtIEeuzU4l5X74wYQ" client="_noKorKtIEeuzU4l5X74wYQ" supplier="_noKoVKtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKos6tIEeuzU4l5X74wYQ" name="ActivityBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKotKtIEeuzU4l5X74wYQ">
          <body>This entity bean persists the details of an activity reservation (activity id, location, price, date/time, head count).
</body>
        </ownedComment>
        <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_noKotatIEeuzU4l5X74wYQ" client="_noKos6tIEeuzU4l5X74wYQ" supplier="_noKotqtIEeuzU4l5X74wYQ" contract="_noKotqtIEeuzU4l5X74wYQ"/>
        <nestedClassifier xmi:type="uml:Interface" xmi:id="_noKotqtIEeuzU4l5X74wYQ" name="IActivityBean"/>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKot6tIEeuzU4l5X74wYQ" client="_noKos6tIEeuzU4l5X74wYQ" supplier="_noKoVKtIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Component" xmi:id="_noKouKtIEeuzU4l5X74wYQ" name="WorkFlowManagerBean">
        <ownedComment xmi:type="uml:Comment" xmi:id="_noKouatIEeuzU4l5X74wYQ">
          <body>This message-driven bean is activated when there is a message in the WorkFlowMgrQueue. It processes two kinds of messages:
   - purchase order message. When processing such messages, this component interacts with ProcessManagerBean to insert the order in the database in the Pending state. Then it interacts synchronously with the Bank external service provider to validate and charge the customer's credit card. If the credit card is OK, it sends a message to the OrderFillerQueue JMS queue to be processed by OrderFillerBean. Finally, it sends another message to CRMQueue, which will be processed by CrmBean (send email to the customer informing the order is being processed).
   - invoice message. This is a message that came from one of the external suppliers in response for a booking order. When an invoice message is received, this component basically interacts with ProcessManagerBean to update the status of the corresponding order. If the message confirms the last invoice that is part of a travel package order, WorkFlowManagerBean sends a JMS message to CrmBean to notify the customer via email.

WorkFlowManagerBean also sets a timer with the EJB container so that it is activated periodically to check the status of all pending orders.

WofkFlowManagerBean is one of the two components in the Adventure Builder system that act as service user of external services (the other is BrokerRequestorBean).

The life cycle of a purchase order can be summarized by the following UML state machine diagram.
https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=146280255</body>
        </ownedComment>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_noKouqtIEeuzU4l5X74wYQ" name="WorkflowManagerBeanPort" type="_noKou6tIEeuzU4l5X74wYQ" aggregation="composite"/>
        <nestedClassifier xmi:type="uml:Interface" xmi:id="_noKou6tIEeuzU4l5X74wYQ" name="IWorkflowManagerBean"/>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKovKtIEeuzU4l5X74wYQ" client="_noKouKtIEeuzU4l5X74wYQ" supplier="_noKojatIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_noKovatIEeuzU4l5X74wYQ" client="_noKouKtIEeuzU4l5X74wYQ" supplier="_noKok6tIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKovqtIEeuzU4l5X74wYQ" client="_noKouKtIEeuzU4l5X74wYQ" supplier="_noKod6tIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKov6tIEeuzU4l5X74wYQ" client="_noKouKtIEeuzU4l5X74wYQ" supplier="_noKofKtIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKowKtIEeuzU4l5X74wYQ" client="_noKouKtIEeuzU4l5X74wYQ" supplier="_noKodKtIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKowatIEeuzU4l5X74wYQ" client="_noKouKtIEeuzU4l5X74wYQ" supplier="_noKofqtIEeuzU4l5X74wYQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_noKowqtIEeuzU4l5X74wYQ" client="_noKouKtIEeuzU4l5X74wYQ" supplier="_noKoeatIEeuzU4l5X74wYQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_noKow6tIEeuzU4l5X74wYQ" name="jdbc" client="_noKoUKtIEeuzU4l5X74wYQ">
        <supplier xmi:type="uml:Component" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_GnNOwKIGEeuZV_N0fPslHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_noKoxKtIEeuzU4l5X74wYQ" client="_noKoUKtIEeuzU4l5X74wYQ">
        <supplier xmi:type="uml:Component" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_IrKDgKIGEeuZV_N0fPslHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_noKoxatIEeuzU4l5X74wYQ" client="_noKoUKtIEeuzU4l5X74wYQ">
        <supplier xmi:type="uml:Interface" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_km7K0KIGEeuZV_N0fPslHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_noKoxqtIEeuzU4l5X74wYQ" client="_noKoUKtIEeuzU4l5X74wYQ">
        <supplier xmi:type="uml:UseCase" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_6D6BIJxxEeuSfsyhIF5DRw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_noKox6tIEeuzU4l5X74wYQ" client="_noKoUKtIEeuzU4l5X74wYQ" supplier="_noKoWqtIEeuzU4l5X74wYQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_noKoyKtIEeuzU4l5X74wYQ" client="_noKoUKtIEeuzU4l5X74wYQ" supplier="_noKoWqtIEeuzU4l5X74wYQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_noKoyatIEeuzU4l5X74wYQ" client="_noKoUKtIEeuzU4l5X74wYQ">
        <supplier xmi:type="uml:Port" href="../../AdventureBuilder/models/AdventureBuilderModel.uml#_UjrjIKImEeuQ_fGpHvaisg"/>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="_cmo2cKCFEeuot_tjXed89A" name="UsageLink">
    <packagedElement xmi:type="uml:Usage" xmi:id="_Mc7V0KBiEeuoXNcr0VwHXg" client="_WHhQAKBbEeuTlOifvX46DQ" supplier="_WHhQAKBbEeuTlOifvX46DQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_zKMyYKHXEeuolPkAC7VaLg" name="2-Modules">
    <ownedComment xmi:type="uml:Comment" xmi:id="_Y0eKwKqpEeuRiIRzpnEATQ">
      <body>Modules views
</body>
    </ownedComment>
    <packagedElement xmi:type="uml:Package" xmi:id="_1UgsQKFzEeu26-oh2DfeGg" name="OPCApp">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-iRocKHYEeuolPkAC7VaLg">
        <body>OpcApp stands for Order Processing Center Application. The business logic of the Adventure Builder is implemented in this module. It provides the following functionality:
   * Accepting purchase order requests from the ConsumerWebsite for processing by hosting the Purchase Order Web Service
   * Provide a mechanism for the Consumer Website to query the current status of a purchase order by hosting the Order Tracking Web Service
   * Communicate with external suppliers to process and maintain the status of a purchase order.
   * Upon completion of processing a purchase order, send an email to the customer of its success or failure.

A module decomposition refined view and a module uses refined view of OpcApp are available.</body>
      </ownedComment>
      <ownedComment xmi:type="uml:Comment" xmi:id="_f0LMUKHsEeu0VdhtLJh5Nw" annotatedElement="_-miRQKFzEeu26-oh2DfeGg _aCq2QKF0Eeu26-oh2DfeGg">
        <body>All other modules within Opc dan use these modules
</body>
      </ownedComment>
      <packagedElement xmi:type="uml:Package" xmi:id="_1txZcKF2Eeu26-oh2DfeGg" name="ServiceLocator">
        <ownedComment xmi:type="uml:Comment" xmi:id="_b0OgcKqpEeuRiIRzpnEATQ">
          <body>TODO
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_2_yiUKFzEeu26-oh2DfeGg" name="Opc">
        <ownedComment xmi:type="uml:Comment" xmi:id="_59pUwKHaEeuolPkAC7VaLg">
          <body>This package contains all the order processing logic, including the workflow, internal queues used for communication between elements, and interaction with external web services.</body>
        </ownedComment>
        <ownedComment xmi:type="uml:Comment" xmi:id="_f8YBkKqpEeuRiIRzpnEATQ">
          <body>Order processing center </body>
        </ownedComment>
        <packagedElement xmi:type="uml:Package" xmi:id="_4c4LYKFzEeu26-oh2DfeGg" name="crm.ejb">
          <ownedComment xmi:type="uml:Comment" xmi:id="_8s37IKHaEeuolPkAC7VaLg">
            <body>This is the Customer Relationship Manager (CRM) module. The job of this module is to send out an email once an order has been completely and successfully processed. It is implemented as a message-driven bean. In the future this module can hold additional information about customers that could assist in providing the customers with a better experience. This could include things like a history of a particular customer's purchases, or sending out periodic emails to customers regarding new and fresh deals.</body>
          </ownedComment>
          <ownedComment xmi:type="uml:Comment" xmi:id="_25COgKtBEeuKYIiqG3jlgQ" annotatedElement="_4c4LYKFzEeu26-oh2DfeGg">
            <body>For each EJb, a pool of bean instances is provided by the application server. There are three parameters that can be configured separately for each EJB via deployment descriptor:</body>
          </ownedComment>
          <ownedComment xmi:type="uml:Comment" xmi:id="_3uIDcKtBEeuKYIiqG3jlgQ" annotatedElement="_4c4LYKFzEeu26-oh2DfeGg">
            <body>   * minimum (and initial) number of bean instances in the pool</body>
          </ownedComment>
          <ownedComment xmi:type="uml:Comment" xmi:id="_38WFoKtBEeuKYIiqG3jlgQ" annotatedElement="_4c4LYKFzEeu26-oh2DfeGg">
            <body>   * maximum number of bean instances in the pool</body>
          </ownedComment>
          <ownedComment xmi:type="uml:Comment" xmi:id="_4Kq1gKtBEeuKYIiqG3jlgQ" annotatedElement="_4c4LYKFzEeu26-oh2DfeGg">
            <body>   * timeout for an idle instance to be passivated or deleted</body>
          </ownedComment>
          <packagedElement xmi:type="uml:Class" xmi:id="_MU1s8KF3Eeu26-oh2DfeGg" name="CrmBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_76OCsKF4Eeu26-oh2DfeGg">
              <body>This class is a message-driven bean. It is responsible for handling the communication with customers via email.
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_sb9LoKtBEeuKYIiqG3jlgQ" annotatedElement="_MU1s8KF3Eeu26-oh2DfeGg">
              <body>This component is used for customer relationship management. For this application it is only used to communicate with the user. It reads messages from a queue, creates the corresponding email messages according to templates and I18N requirements, and sent them to users.</body>
            </ownedComment>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_cge1IKF3Eeu26-oh2DfeGg" client="_MU1s8KF3Eeu26-oh2DfeGg" supplier="_UkcysKF3Eeu26-oh2DfeGg" contract="_UkcysKF3Eeu26-oh2DfeGg"/>
            <nestedClassifier xmi:type="uml:Stereotype" xmi:id="_ay__oKs7EeuKYIiqG3jlgQ" name="Message Driven bean"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_UkcysKF3Eeu26-oh2DfeGg" name="IMessageListener"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_KDlN0KHsEeu0VdhtLJh5Nw" client="_4c4LYKFzEeu26-oh2DfeGg" supplier="_CCI1cKF0Eeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_PfENQKs7EeuKYIiqG3jlgQ" name="CRMQueue"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Q7kAcKs7EeuKYIiqG3jlgQ" name="WorkflowManagerBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="__OZB0Ks_EeuKYIiqG3jlgQ" annotatedElement="_Q7kAcKs7EeuKYIiqG3jlgQ">
              <body>This message-driven bean is activated when there is a message in the WorkFlowMgrQueue. It processes two kinds of messages:
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_BLoxoKtAEeuKYIiqG3jlgQ" annotatedElement="_Q7kAcKs7EeuKYIiqG3jlgQ">
              <body>purchase order message. When processing such messages, this component interacts with ProcessManagerBean to insert the order in the database in the Pending state. Then it interacts synchronously with the Bank external service provider to validate and charge the customer's credit card. If the credit card is OK, it sends a message to the OrderFillerQueue JMS queue to be processed by OrderFillerBean. Finally, it sends another message to CRMQueue, which will be processed by CrmBean (send email to the customer informing the order is being processed).</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_CrokwKtAEeuKYIiqG3jlgQ" annotatedElement="_Q7kAcKs7EeuKYIiqG3jlgQ">
              <body>invoice message. This is a message that came from one of the external suppliers in response for a booking order. When an invoice message is received, this component basically interacts with ProcessManagerBean to update the status of the corresponding order. If the message confirms the last invoice that is part of a travel package order, WorkFlowManagerBean sends a JMS message to CrmBean to notify the customer via email.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_KFwM8KtAEeuKYIiqG3jlgQ" annotatedElement="_Q7kAcKs7EeuKYIiqG3jlgQ">
              <body>WorkFlowManagerBean also sets a timer with the EJB container so that it is activated periodically to check the status of all pending orders.
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_MEkDAKtAEeuKYIiqG3jlgQ" annotatedElement="_Q7kAcKs7EeuKYIiqG3jlgQ">
              <body>WofkFlowManagerBean is one of the two components in the Adventure Builder system that act as service user of external services (the other is BrokerRequestorBean).
</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_SaTPUKs7EeuKYIiqG3jlgQ" name="OrderFillerBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_wDiy0KtAEeuKYIiqG3jlgQ" annotatedElement="_SaTPUKs7EeuKYIiqG3jlgQ">
              <body>This component is used to process the purchaseorder. It reads the purchaseorder and splits it into smaller purchaseorders, one each for activities, transportation and lodging. It then sends each of these smaller purchaseorders to the webservicebroker that in turn sends them to external suppliers.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_xzftgKtAEeuKYIiqG3jlgQ" annotatedElement="_SaTPUKs7EeuKYIiqG3jlgQ">
              <body>   * It provides an interface called sendPO that is used by the workflowmanager to send purchaseorders.
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_yOluEKtAEeuKYIiqG3jlgQ" annotatedElement="_SaTPUKs7EeuKYIiqG3jlgQ">
              <body>   * It requires an interface sendRequest that it uses to send purchaseorders to each individual supplier.

</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Tg_KkKs7EeuKYIiqG3jlgQ" name="BrowkerRequestorBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_6C8bMKtAEeuKYIiqG3jlgQ" annotatedElement="_Tg_KkKs7EeuKYIiqG3jlgQ">
              <body>This message driven bean makes requests to external suppliers. It requires the following interfaces:</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_6ljZAKtAEeuKYIiqG3jlgQ" annotatedElement="_Tg_KkKs7EeuKYIiqG3jlgQ">
              <body>   * AirlinePOService - This is used to send purchaseorders to external airline suppliers.
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_7IqtIKtAEeuKYIiqG3jlgQ" annotatedElement="_Tg_KkKs7EeuKYIiqG3jlgQ">
              <body>   * ActivityPOService - This is used to send purchaseorders to external activity suppliers.
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_7i05kKtAEeuKYIiqG3jlgQ" annotatedElement="_Tg_KkKs7EeuKYIiqG3jlgQ">
              <body>   * LodgingPOService - This is used to send purchaseorders to external lodging suppliers.
</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_E7fEUKs8EeuKYIiqG3jlgQ" name="WorkflowMgrQueue"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_LWn7wKs8EeuKYIiqG3jlgQ" name="OrderFillerQueue"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_OL6G0Ks8EeuKYIiqG3jlgQ" name="WebServiceBrokerQueue"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QQi4EKs8EeuKYIiqG3jlgQ" name="POEndpointBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_hyj18Ks_EeuKYIiqG3jlgQ" annotatedElement="_QQi4EKs8EeuKYIiqG3jlgQ">
              <body></body>
            </ownedComment>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_0pvz0Ks-EeuKYIiqG3jlgQ" client="_QQi4EKs8EeuKYIiqG3jlgQ" supplier="_ipt84Ks-EeuKYIiqG3jlgQ" contract="_ipt84Ks-EeuKYIiqG3jlgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_SZjL8Ks8EeuKYIiqG3jlgQ" name="OTEndpointBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_xKWfUKs_EeuKYIiqG3jlgQ" annotatedElement="_SZjL8Ks8EeuKYIiqG3jlgQ">
              <body></body>
            </ownedComment>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_yfHvUKs-EeuKYIiqG3jlgQ" client="_SZjL8Ks8EeuKYIiqG3jlgQ" supplier="_lSvNkKs-EeuKYIiqG3jlgQ" contract="_lSvNkKs-EeuKYIiqG3jlgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Tq_lsKs8EeuKYIiqG3jlgQ" name="ProcessManagerBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_po2nUKtAEeuKYIiqG3jlgQ" annotatedElement="_Tq_lsKs8EeuKYIiqG3jlgQ">
              <body>This session bean provides operations to retrieve and update the overall status of a purchase order and the status of the individual supplier orders.
</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_VFBTsKs8EeuKYIiqG3jlgQ" name="PurchaseOrderBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_WmoTkKtAEeuKYIiqG3jlgQ" annotatedElement="_VFBTsKs8EeuKYIiqG3jlgQ">
              <body>This entity bean persists the details of a purchase order (user who placed the order, date of the order, total price, head count, departure and arrival dates, departure city, etc.). The status of the order as it's processed is not stored within this entity bean; it's ManagerBean that keeps the order status.
</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_WkSuEKs8EeuKYIiqG3jlgQ" name="ManagerBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_tm6YUKtAEeuKYIiqG3jlgQ" annotatedElement="_WkSuEKs8EeuKYIiqG3jlgQ">
              <body>This entity bean is used by WorkFlowManagerBean to persist the status of the purchase order containing order id, order overall status, and the status of each separate supplier order.</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_YCRH8Ks8EeuKYIiqG3jlgQ" name="ActivityBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_Z4FdQKtAEeuKYIiqG3jlgQ" annotatedElement="_YCRH8Ks8EeuKYIiqG3jlgQ">
              <body>This entity bean persists the details of an activity reservation (activity id, location, price, date/time, head count).</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ZaOZYKs8EeuKYIiqG3jlgQ" name="TransportationBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_dB4fwKtAEeuKYIiqG3jlgQ" annotatedElement="_ZaOZYKs8EeuKYIiqG3jlgQ">
              <body>This entity bean persists the details of a flight reservation (e.g., origin, destination, carrier, flight id, departure time, arrival time, travel class, fare)</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ao390Ks8EeuKYIiqG3jlgQ" name="LodgingBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_hVOkQKtAEeuKYIiqG3jlgQ" annotatedElement="_ao390Ks8EeuKYIiqG3jlgQ">
              <body>This entity bean persists the details of a hotel reservation (hotel id, start date, number of nights, rate per night, number of rooms).</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_coP0kKs8EeuKYIiqG3jlgQ" name="CreditCardBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_kzFyQKtAEeuKYIiqG3jlgQ" annotatedElement="_coP0kKs8EeuKYIiqG3jlgQ">
              <body>This entity bean persists the credit card information (credit card number, type, expiration date, etc.) of a user.</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_d5ey8Ks8EeuKYIiqG3jlgQ" name="BrokerServiceBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_HKcc8KtBEeuKYIiqG3jlgQ" annotatedElement="_d5ey8Ks8EeuKYIiqG3jlgQ">
              <body>This component is the OPC's window to external suppliers for activities, lodging and transportation. It provides the following interfaces:</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_HjVeEKtBEeuKYIiqG3jlgQ" annotatedElement="_d5ey8Ks8EeuKYIiqG3jlgQ">
              <body>   * WebServiceBroker - This is a web service that is used by the external suppliers to submit invoices back to the OPC.
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_HyDPgKtBEeuKYIiqG3jlgQ" annotatedElement="_d5ey8Ks8EeuKYIiqG3jlgQ">
              <body>   * getInvoice - This interface can provide the invoices that are sent by external suppliers.
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_H7_1sKtBEeuKYIiqG3jlgQ" annotatedElement="_d5ey8Ks8EeuKYIiqG3jlgQ">
              <body>   * sendRequest - This interface can be used to contact external suppliers and place orders with them.
</body>
            </ownedComment>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_1gVdkKs-EeuKYIiqG3jlgQ" client="_d5ey8Ks8EeuKYIiqG3jlgQ" supplier="_U76wIKs-EeuKYIiqG3jlgQ" contract="_U76wIKs-EeuKYIiqG3jlgQ"/>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_eoFzIKtBEeuKYIiqG3jlgQ" client="_d5ey8Ks8EeuKYIiqG3jlgQ" supplier="_WYQD4KtBEeuKYIiqG3jlgQ" contract="_WYQD4KtBEeuKYIiqG3jlgQ"/>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_fvA-8KtBEeuKYIiqG3jlgQ" client="_d5ey8Ks8EeuKYIiqG3jlgQ" supplier="_ZMRqsKtBEeuKYIiqG3jlgQ" contract="_ZMRqsKtBEeuKYIiqG3jlgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Usage" xmi:id="_scvoEKs8EeuKYIiqG3jlgQ" client="_PfENQKs7EeuKYIiqG3jlgQ" supplier="_MU1s8KF3Eeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_wPAYwKs8EeuKYIiqG3jlgQ" client="_Q7kAcKs7EeuKYIiqG3jlgQ" supplier="_PfENQKs7EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_x0fI0Ks8EeuKYIiqG3jlgQ" client="_E7fEUKs8EeuKYIiqG3jlgQ" supplier="_Q7kAcKs7EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_z5a1AKs8EeuKYIiqG3jlgQ" client="_d5ey8Ks8EeuKYIiqG3jlgQ" supplier="_E7fEUKs8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_7PPzEKs8EeuKYIiqG3jlgQ" client="_Q7kAcKs7EeuKYIiqG3jlgQ" supplier="_LWn7wKs8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_8TSC8Ks8EeuKYIiqG3jlgQ" client="_LWn7wKs8EeuKYIiqG3jlgQ" supplier="_SaTPUKs7EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_9KwdgKs8EeuKYIiqG3jlgQ" client="_SaTPUKs7EeuKYIiqG3jlgQ" supplier="_OL6G0Ks8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_BS3iYKs9EeuKYIiqG3jlgQ" client="_OL6G0Ks8EeuKYIiqG3jlgQ" supplier="_Tg_KkKs7EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_QUZn4Ks9EeuKYIiqG3jlgQ" client="_QQi4EKs8EeuKYIiqG3jlgQ" supplier="_E7fEUKs8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_Va1WMKs9EeuKYIiqG3jlgQ" client="_x0fI0Ks8EeuKYIiqG3jlgQ" supplier="_Tq_lsKs8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_aLKRoKs9EeuKYIiqG3jlgQ" client="_SZjL8Ks8EeuKYIiqG3jlgQ" supplier="_Tq_lsKs8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_buwLUKs9EeuKYIiqG3jlgQ" client="_Tq_lsKs8EeuKYIiqG3jlgQ" supplier="_WkSuEKs8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_dcZY4Ks9EeuKYIiqG3jlgQ" client="_Q7kAcKs7EeuKYIiqG3jlgQ" supplier="_WkSuEKs8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_f5250Ks9EeuKYIiqG3jlgQ" client="_Q7kAcKs7EeuKYIiqG3jlgQ" supplier="_VFBTsKs8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_iPIIEKs9EeuKYIiqG3jlgQ" client="_VFBTsKs8EeuKYIiqG3jlgQ" supplier="_YCRH8Ks8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_jt-rsKs9EeuKYIiqG3jlgQ" client="_VFBTsKs8EeuKYIiqG3jlgQ" supplier="_ZaOZYKs8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_l8jcEKs9EeuKYIiqG3jlgQ" client="_VFBTsKs8EeuKYIiqG3jlgQ" supplier="_ao390Ks8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Usage" xmi:id="_nPmYUKs9EeuKYIiqG3jlgQ" client="_VFBTsKs8EeuKYIiqG3jlgQ" supplier="_coP0kKs8EeuKYIiqG3jlgQ"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_U76wIKs-EeuKYIiqG3jlgQ" name="WebServiceBroker">
            <ownedComment xmi:type="uml:Comment" xmi:id="_jf4ogKtBEeuKYIiqG3jlgQ" annotatedElement="_U76wIKs-EeuKYIiqG3jlgQ">
              <body>WebServiceBroker - This is a web service that is used by the external suppliers to submit invoices back to the OPC.</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_ipt84Ks-EeuKYIiqG3jlgQ" name="OpcPurchaseOrderService"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_lSvNkKs-EeuKYIiqG3jlgQ" name="OpcOrderTrackingService"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_WYQD4KtBEeuKYIiqG3jlgQ" name="GetInvoice">
            <ownedComment xmi:type="uml:Comment" xmi:id="_l64rUKtBEeuKYIiqG3jlgQ" annotatedElement="_WYQD4KtBEeuKYIiqG3jlgQ">
              <body>getInvoice - This interface can provide the invoices that are sent by external suppliers.
</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_ZMRqsKtBEeuKYIiqG3jlgQ" name="SendRequest">
            <ownedComment xmi:type="uml:Comment" xmi:id="_ovQQYKtBEeuKYIiqG3jlgQ" annotatedElement="_ZMRqsKtBEeuKYIiqG3jlgQ">
              <body>sendRequest - This interface can be used to contact external suppliers and place orders with them.</body>
            </ownedComment>
          </packagedElement>
          <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_-Y46AKs7EeuKYIiqG3jlgQ">
            <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_-Y6IIKs7EeuKYIiqG3jlgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <references xmi:type="ecore:EPackage" href=".#//%http:%2F%2Fwww.eclipse.org%2Fuml2%2F2.0.0%2FUML%/_"/>
            </eAnnotations>
            <appliedProfile xmi:type="uml:Profile" href=".#/"/>
          </profileApplication>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_5nQT0KFzEeu26-oh2DfeGg" name="Financial">
          <ownedComment xmi:type="uml:Comment" xmi:id="_AbndwKHbEeuolPkAC7VaLg">
            <body>The financial module is responsible for verifying and charging the customer's credit card. For this purpose it calls the external web services provided by the bank. The verification of the credit card happens in asynchronous manner and the OPC application waits for the external web service to reply before moving on. If the response from the banking service is not positive, the OPC application does not further process the order.</body>
          </ownedComment>
          <packagedElement xmi:type="uml:Class" xmi:id="_h6QWMKF3Eeu26-oh2DfeGg" name="CreditCardVerifier">
            <ownedComment xmi:type="uml:Comment" xmi:id="_9Y5nMKF4Eeu26-oh2DfeGg">
              <body>This class is used to verify the credit information for a user. It contacts an external web service to get the banking related information for the credit card number specified.</body>
            </ownedComment>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_plQxQKH_EeuZV_N0fPslHQ" name="verifyCreditCard"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_HAdQgKHrEeu0VdhtLJh5Nw" client="_5nQT0KFzEeu26-oh2DfeGg" supplier="_-6ES0KHXEeuolPkAC7VaLg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_7mSzYKFzEeu26-oh2DfeGg" name="PoWebService">
          <ownedComment xmi:type="uml:Comment" xmi:id="_Ej8lEKHbEeuolPkAC7VaLg">
            <body>This module provides a web service that is used by ConsumerWebsite to communicate the details of a purchase order to the OPC for processing. The web service interface is OpcPurchaseOrderService:
OpcPurchaseOrderService interface documentation</body>
          </ownedComment>
          <packagedElement xmi:type="uml:Class" xmi:id="_d4y2cKF4Eeu26-oh2DfeGg" name="POEndpointBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_vMl5gKF4Eeu26-oh2DfeGg">
              <body>This class is a stateless session bean. It provides the implementation for the OpcPurchaseOrderService web service. When it receives a purchase order, it checks that all arguments are valid and if ok dispatches the order to the workflowmanager sending a message to a JMS queue.</body>
            </ownedComment>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_xIjLEKHUEeu26-oh2DfeGg" name="submitPurchaseOrder" concurrency="concurrent">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_LzEs8KHVEeu26-oh2DfeGg" name="purchaseOrder" type="_yJCXsKHUEeu26-oh2DfeGg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_yJCXsKHUEeu26-oh2DfeGg" name="PurchaseOrder"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_PhRdAKHVEeu26-oh2DfeGg" client="_d4y2cKF4Eeu26-oh2DfeGg" supplier="_yJCXsKHUEeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_2F-P4KHrEeu0VdhtLJh5Nw" name="jsm send" client="_7mSzYKFzEeu26-oh2DfeGg" supplier="_3MZ-YKHpEeuolPkAC7VaLg"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_KcfnoKHtEeu0VdhtLJh5Nw" name="IOpcPurchaseOrderService"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QqLR4KHtEeu0VdhtLJh5Nw" name="PoWebService">
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_TBr70KHtEeu0VdhtLJh5Nw" client="_QqLR4KHtEeu0VdhtLJh5Nw" supplier="_KcfnoKHtEeu0VdhtLJh5Nw" contract="_KcfnoKHtEeu0VdhtLJh5Nw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_J23DoKHwEeu0VdhtLJh5Nw" name="jms send" client="_d4y2cKF4Eeu26-oh2DfeGg" supplier="_pMffMKHvEeu0VdhtLJh5Nw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_9tABMKFzEeu26-oh2DfeGg" name="Invoice">
          <ownedComment xmi:type="uml:Comment" xmi:id="_93kzsKHaEeuolPkAC7VaLg">
            <body>This package contains a data structure that holds information that the OPC uses to communicate with external suppliers. The data structure also holds the status of an order in the invoice (for more information on the lifecycle of an order see the state diagram in the OPC C&amp;C view).</body>
          </ownedComment>
          <packagedElement xmi:type="uml:Class" xmi:id="_VGYloKF4Eeu26-oh2DfeGg" name="Invoice">
            <ownedComment xmi:type="uml:Comment" xmi:id="_C_WSUKF5Eeu26-oh2DfeGg">
              <body>This &quot;value object&quot; class holds the data for an invoice that arrives from any of the external suppliers. It has a method to provide an XML representation of the invoice.</body>
            </ownedComment>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_-miRQKFzEeu26-oh2DfeGg" name="Utils">
          <ownedComment xmi:type="uml:Comment" xmi:id="_BuL44KHbEeuolPkAC7VaLg">
            <body>This package contains utility classes that are used by the OPC application, such as glue code for JMSAPI. In the future, this module will be moved to the utils package outside opc.</body>
          </ownedComment>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="__qdzcKFzEeu26-oh2DfeGg" name="OTWebService">
          <ownedComment xmi:type="uml:Comment" xmi:id="_FwBWoKHbEeuolPkAC7VaLg">
            <body>This module provides a web service that is used by ConsumerWebsite to query the status of an order by providing the order id. The web service interface is OpcOrderTrackingService:
OpcOrderTrackingService interface documentation</body>
          </ownedComment>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_B_v6QKHsEeu0VdhtLJh5Nw" client="__qdzcKFzEeu26-oh2DfeGg" supplier="_1txZcKF2Eeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_DcHKkKHsEeu0VdhtLJh5Nw" client="__qdzcKFzEeu26-oh2DfeGg" supplier="_4c4LYKFzEeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_TIPsQKHsEeu0VdhtLJh5Nw" client="__qdzcKFzEeu26-oh2DfeGg" supplier="_clh0kKF0Eeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_3hPpIKHtEeu0VdhtLJh5Nw" name="OtWebService">
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_7jsK4KHtEeu0VdhtLJh5Nw" client="_3hPpIKHtEeu0VdhtLJh5Nw" supplier="_5CLQYKHtEeu0VdhtLJh5Nw" contract="_5CLQYKHtEeu0VdhtLJh5Nw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_5CLQYKHtEeu0VdhtLJh5Nw" name="IOpcOrderTrackingService"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CCI1cKF0Eeu26-oh2DfeGg" name="Mailer">
          <ownedComment xmi:type="uml:Comment" xmi:id="__epfMKHaEeuolPkAC7VaLg">
            <body>The mailer is a helper module and its primary responsibility is to send out emails using the Java Mail API.It is provided with a message and email addresses to send out emails. In the future this module will be moved to the utils package outside opc.</body>
          </ownedComment>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_aCq2QKF0Eeu26-oh2DfeGg" name="PurchaseOrder">
          <ownedComment xmi:type="uml:Comment" xmi:id="_UN8_0KHbEeuolPkAC7VaLg">
            <body>This package contains the classes that correspond in memory to the data entities required to create a purchase order. For each data entity, there is a POJO and an entity bean. The POJOs are used throughout the application as data transfer objects. The data entities in this package are:
   * Activity
   * CreditCard
   * Lodging
   * PurchaseOrder
   * Transportation
   * ContactInfo
   * Address

See the data model for a description of what each entity represents.</body>
          </ownedComment>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_um-yYKF1Eeu26-oh2DfeGg" name="OrderFiller">
          <ownedComment xmi:type="uml:Comment" xmi:id="_DXsNUKHbEeuolPkAC7VaLg">
            <body>This module reads an internal queue of order requests. When an order arrives, it decomposes the order into requests to the different providers involved. These requests are sent in XML format to internal queues.</body>
          </ownedComment>
          <packagedElement xmi:type="uml:Class" xmi:id="_yTNzkKF1Eeu26-oh2DfeGg" name="OrderFillerBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_-h-IEKF4Eeu26-oh2DfeGg">
              <body>This class is a message-driven bean. It is responsible for sending out all the booking requests to the airline, lodging and activity suppliers involved in a given purchase order.</body>
            </ownedComment>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_1gn40KF3Eeu26-oh2DfeGg" client="_yTNzkKF1Eeu26-oh2DfeGg" supplier="_w6e0IKF3Eeu26-oh2DfeGg" contract="_w6e0IKF3Eeu26-oh2DfeGg"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_oKJzQKIBEeuZV_N0fPslHQ" name="sendPO()"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_p1jlIKIBEeuZV_N0fPslHQ" name="onMessage()"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_w6e0IKF3Eeu26-oh2DfeGg" name="IOrderFiller"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_acGw4KHrEeu0VdhtLJh5Nw" name="jsm send" client="_um-yYKF1Eeu26-oh2DfeGg" supplier="_jwShwKHaEeuolPkAC7VaLg"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_DPbXcKICEeuZV_N0fPslHQ" client="_yTNzkKF1Eeu26-oh2DfeGg" supplier="_bs1zcKIAEeuZV_N0fPslHQ"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_O9lH0KHaEeuolPkAC7VaLg" name="OrderReceiver">
          <ownedComment xmi:type="uml:Comment" xmi:id="_HJN-MKHbEeuolPkAC7VaLg">
            <body>The orderreceiver helps in persisting the purchase order in a relational database.</body>
          </ownedComment>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_uFqxcKHrEeu0VdhtLJh5Nw" client="_O9lH0KHaEeuolPkAC7VaLg" supplier="_1txZcKF2Eeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_oeKHoKHxEeu0VdhtLJh5Nw" name="POReceiver">
            <ownedComment xmi:type="uml:Comment" xmi:id="_MvxqIKHzEeu0VdhtLJh5Nw">
              <body>The purchase order receiver's responsibility is to create a purchase order entity bean and persist it in a relational database. The POReceiver is implemented as a Java class and it creates a PurchaseOrder entity bean.</body>
            </ownedComment>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_tbMhAKH_EeuZV_N0fPslHQ" name="persist()"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_jwShwKHaEeuolPkAC7VaLg" name="WebServiceBroker">
          <ownedComment xmi:type="uml:Comment" xmi:id="_VTDmsKHbEeuolPkAC7VaLg">
            <body>The webservicebroker is responsible for the interaction via web services with the airline, lodging and activity providers. This module is divided into two sub-modules described below.</body>
          </ownedComment>
          <packagedElement xmi:type="uml:Package" xmi:id="_nYQG8KHaEeuolPkAC7VaLg" name="Requestor">
            <ownedComment xmi:type="uml:Comment" xmi:id="_WQvW8KHbEeuolPkAC7VaLg">
              <body>Contains classes that can invoke the external web services provided by airline, lodging and activity supplier partners. It also contains a message-driven bean that can receive messages sent through an internal queue. These messages contain exactly the requests to be sent to the external web services.</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_qdxtcKHaEeuolPkAC7VaLg" name="Provider">
            <ownedComment xmi:type="uml:Comment" xmi:id="_Zy2y0KHbEeuolPkAC7VaLg">
              <body>This module provides a web service that is visible to airline, lodging and activity supplier partners. This web service is implemented in a session bean and is used by the external partners to submit the result of processing requests made to them. Calls to this web service are forwarded to an internal queue.</body>
            </ownedComment>
            <packagedElement xmi:type="uml:Class" xmi:id="_c_590KIAEeuZV_N0fPslHQ" name="BrokerServiceBean">
              <ownedOperation xmi:type="uml:Operation" xmi:id="_tyZ1MKIBEeuZV_N0fPslHQ" name="onMessage()"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_WHhQAKBbEeuTlOifvX46DQ" name="IWebServiceBroker2"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_ja4CsKHrEeu0VdhtLJh5Nw" name="jms send" client="_jwShwKHaEeuolPkAC7VaLg" supplier="_3MZ-YKHpEeuolPkAC7VaLg"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_bs1zcKIAEeuZV_N0fPslHQ" name="BrokerRequestBean">
            <ownedOperation xmi:type="uml:Operation" xmi:id="_4vcxkKIBEeuZV_N0fPslHQ" name="onMessage()"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_3MZ-YKHpEeuolPkAC7VaLg" name="WorkflowManager">
          <ownedComment xmi:type="uml:Comment" xmi:id="_reXeYKHzEeu0VdhtLJh5Nw">
            <body>



SMTP host, message body contents, subject, sender address and reply-to address for all email messages sent by CrmBean are configurable via text files that can be changed at run time, but require reinitialization of the application to take effect. These files are implemented using standard Java i18n support.</body>
          </ownedComment>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_BfzEUKHrEeu0VdhtLJh5Nw" client="_3MZ-YKHpEeuolPkAC7VaLg" supplier="_5nQT0KFzEeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_FpNJsKHrEeu0VdhtLJh5Nw" client="_3MZ-YKHpEeuolPkAC7VaLg" supplier="_9tABMKFzEeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_s1pUAKHrEeu0VdhtLJh5Nw" client="_3MZ-YKHpEeuolPkAC7VaLg" supplier="_O9lH0KHaEeuolPkAC7VaLg"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_u709YKHrEeu0VdhtLJh5Nw" client="_3MZ-YKHpEeuolPkAC7VaLg" supplier="_1txZcKF2Eeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_LNKsEKHsEeu0VdhtLJh5Nw" client="_3MZ-YKHpEeuolPkAC7VaLg" supplier="_CCI1cKF0Eeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_VlMP0KHsEeu0VdhtLJh5Nw" client="_3MZ-YKHpEeuolPkAC7VaLg" supplier="_clh0kKF0Eeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_nehhgKHvEeu0VdhtLJh5Nw" name="WorkflowManagrerBean">
            <ownedComment xmi:type="uml:Comment" xmi:id="_9di2MKHyEeu0VdhtLJh5Nw">
              <body>This class is a message-driven bean. It is activated when there is a message in the queue. It processes two kinds of messages:
   * purchase order message: in this case it calls the PoHandler class. The sequence diagram down below shows the interactions involved in processing a purchase order.
   * invoice message: this is a message that came from one of the external suppliers in response for a booking order. WorkFlowManagerBean calls the InvoiceHandler class to take care of this messages.

WorkFlowManagerBean also sets a timer with the EJB container so that it is activated periodically to check the status of all pending orders.</body>
            </ownedComment>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_uALQoKHvEeu0VdhtLJh5Nw" client="_nehhgKHvEeu0VdhtLJh5Nw" supplier="_pMffMKHvEeu0VdhtLJh5Nw" contract="_pMffMKHvEeu0VdhtLJh5Nw"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_cf06IKIBEeuZV_N0fPslHQ" name="onMessage()"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_pMffMKHvEeu0VdhtLJh5Nw" name="IMessageListener"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_OowFUKHwEeu0VdhtLJh5Nw" name="Handlers">
            <packagedElement xmi:type="uml:Class" xmi:id="_ZGeBYKHwEeu0VdhtLJh5Nw" name="POHandler">
              <ownedComment xmi:type="uml:Comment" xmi:id="_AX6VkKHzEeu0VdhtLJh5Nw">
                <body>The PoHandler class is not visible outside the workflowmanager package. It acts as a delegate of the WorkFlowManagerBean class to handle any purchase order request. When processing a request, it first uses POReceiver and processmanager to insert the order in the database in the Pending state. Then it calls CreditCardVerifier synchronously to charge the customer's credit card. If the credit card is OK, it sends a message to a JMS queue to be processed by OrderFillerBean. Finally, it sends another JMS message to CrmBean, which will create and send an email to the customer informing about the status of his order.</body>
              </ownedComment>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_eQRkEKIBEeuZV_N0fPslHQ" name="handle()"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZQ36kKHwEeu0VdhtLJh5Nw" name="InvoiceHandler">
              <ownedComment xmi:type="uml:Comment" xmi:id="_ES2hIKHzEeu0VdhtLJh5Nw">
                <body>The InvoiceHandler is not visible outside the workflowmanager package. It acts as a delegate of the WorkflowManagerBean class to handle any invoice it receives from any of the suppliers. When an invoice is received, InvoiceHandler basically uses processmanager to update the status of the corresponding order.
   * A given adventure package order may consist of:
   * zero or one hotel booking
   * zero, one or two airline flights (departing and returning flight)
   * zero or more activity items

When InvoiceHandler receives the last invoice confirming completion of the reservation, it sends a JMS message to CrmBean to notify the customer via email.
</body>
              </ownedComment>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fZB74KIBEeuZV_N0fPslHQ" name="handle()"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_I3uscKHxEeu0VdhtLJh5Nw" client="_ZGeBYKHwEeu0VdhtLJh5Nw" supplier="_PZCmsKHYEeuolPkAC7VaLg"/>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_J9pysKHxEeu0VdhtLJh5Nw" client="_ZQ36kKHwEeu0VdhtLJh5Nw" supplier="_PZCmsKHYEeuolPkAC7VaLg"/>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_RkSM4KHxEeu0VdhtLJh5Nw" client="_ZGeBYKHwEeu0VdhtLJh5Nw" supplier="_CCI1cKF0Eeu26-oh2DfeGg"/>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_SJ9s0KHxEeu0VdhtLJh5Nw" client="_ZQ36kKHwEeu0VdhtLJh5Nw" supplier="_CCI1cKF0Eeu26-oh2DfeGg"/>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_X2aSQKHxEeu0VdhtLJh5Nw" client="_ZQ36kKHwEeu0VdhtLJh5Nw" supplier="_VGYloKF4Eeu26-oh2DfeGg"/>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_bmLvoKHxEeu0VdhtLJh5Nw" client="_ZQ36kKHwEeu0VdhtLJh5Nw" supplier="_clh0kKF0Eeu26-oh2DfeGg"/>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_cZD-EKHxEeu0VdhtLJh5Nw" client="_ZGeBYKHwEeu0VdhtLJh5Nw" supplier="_clh0kKF0Eeu26-oh2DfeGg"/>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_wEb8gKHxEeu0VdhtLJh5Nw" client="_ZGeBYKHwEeu0VdhtLJh5Nw" supplier="_oeKHoKHxEeu0VdhtLJh5Nw"/>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_oLZHMKHyEeu0VdhtLJh5Nw" name="jsm send" client="_ZGeBYKHwEeu0VdhtLJh5Nw" supplier="_w6e0IKF3Eeu26-oh2DfeGg"/>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_sK9UEKHyEeu0VdhtLJh5Nw" client="_ZGeBYKHwEeu0VdhtLJh5Nw" supplier="_h6QWMKF3Eeu26-oh2DfeGg"/>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_APSAMKICEeuZV_N0fPslHQ" client="_ZGeBYKHwEeu0VdhtLJh5Nw" supplier="_FC7AQKIAEeuZV_N0fPslHQ"/>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_CMPcIKICEeuZV_N0fPslHQ" client="_ZQ36kKHwEeu0VdhtLJh5Nw" supplier="_c_590KIAEeuZV_N0fPslHQ"/>
            <packagedElement xmi:type="uml:Dependency" xmi:id="_y4JPYKqmEeuRiIRzpnEATQ" client="_ZQ36kKHwEeu0VdhtLJh5Nw" supplier="_bs1zcKIAEeuZV_N0fPslHQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_pJgAIKHwEeu0VdhtLJh5Nw" client="_nehhgKHvEeu0VdhtLJh5Nw" supplier="_ZQ36kKHwEeu0VdhtLJh5Nw"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_p0O_MKHwEeu0VdhtLJh5Nw" client="_pJgAIKHwEeu0VdhtLJh5Nw" supplier="_ZGeBYKHwEeu0VdhtLJh5Nw"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_NISisKHxEeu0VdhtLJh5Nw" client="_nehhgKHvEeu0VdhtLJh5Nw" supplier="_PZCmsKHYEeuolPkAC7VaLg"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_EA2NUKICEeuZV_N0fPslHQ" client="_nehhgKHvEeu0VdhtLJh5Nw" supplier="_yTNzkKF1Eeu26-oh2DfeGg"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_EsjcwKICEeuZV_N0fPslHQ" client="_nehhgKHvEeu0VdhtLJh5Nw" supplier="_ZGeBYKHwEeu0VdhtLJh5Nw"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_Jli0YKqnEeuRiIRzpnEATQ" name="SErviceException"/>
          <packagedElement xmi:type="uml:Dependency" xmi:id="_eR6gUKqoEeuRiIRzpnEATQ" name="jms send" client="_3MZ-YKHpEeuolPkAC7VaLg" supplier="_um-yYKF1Eeu26-oh2DfeGg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_LZWUUKqnEeuRiIRzpnEATQ" client="_2_yiUKFzEeu26-oh2DfeGg" supplier="_-miRQKFzEeu26-oh2DfeGg"/>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_MDbMEKqnEeuRiIRzpnEATQ" client="_2_yiUKFzEeu26-oh2DfeGg" supplier="_aCq2QKF0Eeu26-oh2DfeGg"/>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_MnydYKqnEeuRiIRzpnEATQ" client="_2_yiUKFzEeu26-oh2DfeGg" supplier="_Jli0YKqnEeuRiIRzpnEATQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_TCuqMKHYEeuolPkAC7VaLg" client="_1UgsQKFzEeu26-oh2DfeGg" supplier="_-6ES0KHXEeuolPkAC7VaLg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_T9MuYKHYEeuolPkAC7VaLg" client="_1UgsQKFzEeu26-oh2DfeGg" supplier="_Amjp0KHYEeuolPkAC7VaLg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_W2_mAKHYEeuolPkAC7VaLg" client="_1UgsQKFzEeu26-oh2DfeGg" supplier="_Ddk6QKHYEeuolPkAC7VaLg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_YSMYsKHYEeuolPkAC7VaLg" client="_1UgsQKFzEeu26-oh2DfeGg" supplier="_FI-FEKHYEeuolPkAC7VaLg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_fJPwEKHYEeuolPkAC7VaLg" client="_1UgsQKFzEeu26-oh2DfeGg" supplier="_PZCmsKHYEeuolPkAC7VaLg"/>
      <packagedElement xmi:type="uml:Package" xmi:id="_clh0kKF0Eeu26-oh2DfeGg" name="ProcessManager">
        <ownedComment xmi:type="uml:Comment" xmi:id="_bWWl4KHbEeuolPkAC7VaLg">
          <body>The processmanager is used by the otwebservice module to retrieve from the database adventure package purchase orders and their updated status. It is also used by the workflowmanager to retrieve the orders placed with the external providers and persist their status. This module contains the submodules (ejb and manager.ejb) described below.</body>
        </ownedComment>
        <packagedElement xmi:type="uml:Package" xmi:id="_esmOwKF0Eeu26-oh2DfeGg" name="ejb">
          <ownedComment xmi:type="uml:Comment" xmi:id="_caSvIKHbEeuolPkAC7VaLg">
            <body>Contains a session bean that offers operations to retrieve orders and update the status of a given order(both the adventure purchase order and the orders placed with the partner suppliers).
</body>
          </ownedComment>
        </packagedElement>
        <packagedElement xmi:type="uml:Model" xmi:id="_f3f7oKF0Eeu26-oh2DfeGg" name="Manager.ejb">
          <ownedComment xmi:type="uml:Comment" xmi:id="_eCOWQKHbEeuolPkAC7VaLg">
            <body>Contains an entity bean to persist a purchase order. The entity bean uses container-managed persistence (CMP).

Rational
The choice of EJBs in the implementation, including session beans, message-driven beans and entity beans is based on:
   * Developers are familiar with EJB development and component-based development.
   * These highly modular EJB components promote reuse.</body>
          </ownedComment>
        </packagedElement>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_ag7xEKHsEeu0VdhtLJh5Nw" client="_clh0kKF0Eeu26-oh2DfeGg" supplier="_-miRQKFzEeu26-oh2DfeGg"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FC7AQKIAEeuZV_N0fPslHQ" name="ProcessManagerBean">
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Hq02oKIAEeuZV_N0fPslHQ" name="updateOrderStatus()"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_K6w9YKIAEeuZV_N0fPslHQ" name="getOrderStatus()"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_-6ES0KHXEeuolPkAC7VaLg" name="BankCreditCardService">
      <ownedComment xmi:type="uml:Comment" xmi:id="_GfHjMKHZEeuolPkAC7VaLg">
        <body>This module represents an external service provided by a partner bank to validate credit card transactions.</body>
      </ownedComment>
      <packagedElement xmi:type="uml:Interface" xmi:id="_s6MaAKIxEeuQ_fGpHvaisg" name="ICreditCardService"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Amjp0KHYEeuolPkAC7VaLg" name="AirlineBookingService">
      <ownedComment xmi:type="uml:Comment" xmi:id="_HdPYUKHZEeuolPkAC7VaLg">
        <body>This module represents an external service provided by an airline partner company to book air travel.</body>
      </ownedComment>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_VU2d0KHYEeuolPkAC7VaLg" client="_Amjp0KHYEeuolPkAC7VaLg" supplier="_1UgsQKFzEeu26-oh2DfeGg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_QEAUoKHrEeu0VdhtLJh5Nw" name="wsdl" client="_Amjp0KHYEeuolPkAC7VaLg" supplier="_jwShwKHaEeuolPkAC7VaLg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="__hN18KIlEeuQ_fGpHvaisg" name="AirlineBookingAdapter">
        <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_BNc_MKIvEeuQ_fGpHvaisg" client="__hN18KIlEeuQ_fGpHvaisg" supplier="_km7K0KIGEeuZV_N0fPslHQ" contract="_km7K0KIGEeuZV_N0fPslHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_km7K0KIGEeuZV_N0fPslHQ" name="IAirlineBookingService"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Ddk6QKHYEeuolPkAC7VaLg" name="LodgingBookingService">
      <ownedComment xmi:type="uml:Comment" xmi:id="_I0jJgKHZEeuolPkAC7VaLg">
        <body>This module represents an external service provided by a lodging partner company to book hotel rooms.</body>
      </ownedComment>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_Xh0EoKHYEeuolPkAC7VaLg" client="_Ddk6QKHYEeuolPkAC7VaLg" supplier="_1UgsQKFzEeu26-oh2DfeGg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_Rl92oKHrEeu0VdhtLJh5Nw" name="wsdl" client="_Ddk6QKHYEeuolPkAC7VaLg" supplier="_jwShwKHaEeuolPkAC7VaLg"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_KFQmAKIyEeuQ_fGpHvaisg" name="ILodgingBookingService"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_PWCjIKIyEeuQ_fGpHvaisg" name="LodgingBookingServiceAdapter">
        <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_TPgIAKIyEeuQ_fGpHvaisg" client="_PWCjIKIyEeuQ_fGpHvaisg" supplier="_KFQmAKIyEeuQ_fGpHvaisg" contract="_KFQmAKIyEeuQ_fGpHvaisg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_FI-FEKHYEeuolPkAC7VaLg" name="ActivityBookingService">
      <ownedComment xmi:type="uml:Comment" xmi:id="_LbRUIKHZEeuolPkAC7VaLg">
        <body>This module represents an external service provided by an activity supplier company to book different activities.</body>
      </ownedComment>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_ZqEKkKHYEeuolPkAC7VaLg" client="_FI-FEKHYEeuolPkAC7VaLg" supplier="_1UgsQKFzEeu26-oh2DfeGg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_UThCAKHrEeu0VdhtLJh5Nw" name="wsdl" client="_FI-FEKHYEeuolPkAC7VaLg" supplier="_jwShwKHaEeuolPkAC7VaLg"/>
      <packagedElement xmi:type="uml:Realization" xmi:id="_IRObYKIYEeuQ_fGpHvaisg" client="_FI-FEKHYEeuolPkAC7VaLg" supplier="_sge4YJxxEeuSfsyhIF5DRw"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FJFo8KIcEeuQ_fGpHvaisg" name="ActivityBookingAdapter">
        <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_gSffMKIcEeuQ_fGpHvaisg" client="_FJFo8KIcEeuQ_fGpHvaisg" supplier="_cto4YKIcEeuQ_fGpHvaisg" contract="_cto4YKIcEeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_cto4YKIcEeuQ_fGpHvaisg" name="IActivityBookingService"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_I3j2sKHYEeuolPkAC7VaLg" name="ConsumerWebSite">
      <ownedComment xmi:type="uml:Comment" xmi:id="_5wnQQKHYEeuolPkAC7VaLg">
        <body>The web-based user interface of the Adventure Builder is implemented in this module. The user interface lets the user browse the catalog of travel packages, place a new purchase order, and track the status of existing orders. This module creates the purchase orders based on user input and passes them to OpcApp for processing. It uses an implementation of the Model View Controller pattern called the Web Application Framework (waf). The model is implemented using Entity beans, the controller is implemented using servlets, and the view is a collection of JSPs and static HTML pages. Part of the client-facing code is implemented using the GWT framework.</body>
      </ownedComment>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_cEBrkKHYEeuolPkAC7VaLg" client="_I3j2sKHYEeuolPkAC7VaLg" supplier="_1UgsQKFzEeu26-oh2DfeGg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_csJbgKHYEeuolPkAC7VaLg" client="_I3j2sKHYEeuolPkAC7VaLg" supplier="_Kb5XQKHYEeuolPkAC7VaLg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_dRMpUKHYEeuolPkAC7VaLg" client="_I3j2sKHYEeuolPkAC7VaLg" supplier="_K_gaoKHYEeuolPkAC7VaLg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_eMTmsKHYEeuolPkAC7VaLg" client="_I3j2sKHYEeuolPkAC7VaLg" supplier="_NR9lcKHYEeuolPkAC7VaLg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_x_Dr8KI6EeunXvFhYSwR_g" client="_I3j2sKHYEeuolPkAC7VaLg" supplier="_7mSzYKFzEeu26-oh2DfeGg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_ykIu8KI6EeunXvFhYSwR_g" client="_I3j2sKHYEeuolPkAC7VaLg" supplier="__qdzcKFzEeu26-oh2DfeGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Kb5XQKHYEeuolPkAC7VaLg" name="Gwt">
      <ownedComment xmi:type="uml:Comment" xmi:id="_EPwIoKHZEeuolPkAC7VaLg">
        <body>Google Web Toolkit (gwt) is an open source framework for development of rich internet applications based on Ajax.

Rational
   * The GWT framework was chosen for the following reasons:
   * It is open source, which allows us to go under the hood and fix things when needed.
   * It provides a rich development environment with powerful trace/debug, IDE integration and build management.
   * It integrates well with any other frontend technologies since it does not use proprietary standards.
   * It offers powerful widget construction features.
   * There are several extension libraries of widget components available.
   * Code is written in Java (and translated to JavaScript during build), which is an OO language that is familiar to the majority of the team.
   * Code is compiled into Javascript, which is available on a very high percentage of browsers.
   * It has a reasonably large support community and is backed by a major player in the industry (Google).

The table below shows the comparative analysis of GWT and competing technologies based on the specific needs of our project.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_K_gaoKHYEeuolPkAC7VaLg" name="waf">
      <ownedComment xmi:type="uml:Comment" xmi:id="_FaQM4KHZEeuolPkAC7VaLg">
        <body>Waf stands for Web Application Framework. It is a Model View Controller framework similar to Struts. It allows you to specify in configuration files the web screens and action that are associated to user clicks on specific elements of the screen. The configuration file has the mapping of screens and actions to Java classes. The framework provides the engine to display the proper screens and invoke the proper actions.

Rationale
The WAF framework was chosen because it facilitates the implementation of the Consumer Website code by providing template classes for using the MVC pattern. For a given user operation, the developer implements an action class (controller) and JSP pages that correspond to the user screens (view). The developer also uses configuration files to provide a configurable mapping between actions, action classes, events and screens. The WAF infrastructure can then automatically take http requests and invoke the action classes and JSP screens. WAF also provides support for event-based communication and internationalization.

WAF also provides support for event-based communication and internationalization.

An alternative to WAF was to use the Spring framework. Spring was a more robust and rich solution from a technical standpoint, but it was rejected because the development team is not familiar with Spring and very familiar with WAF.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_NR9lcKHYEeuolPkAC7VaLg" name="Util">
      <ownedComment xmi:type="uml:Comment" xmi:id="__tT4MKHYEeuolPkAC7VaLg">
        <body>This module contains utilities used by the Adventure Builder system.</body>
      </ownedComment>
      <packagedElement xmi:type="uml:Package" xmi:id="_kGLkIKHYEeuolPkAC7VaLg" name="Dao">
        <ownedComment xmi:type="uml:Comment" xmi:id="_AyjB8KHZEeuolPkAC7VaLg">
          <body>This module contains Data Access Object (DAO) utilities, such as a DAO factory. It does not contain the actual DAO classes that access the database--these classes are inside the ConsumerWebsite module.</body>
        </ownedComment>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_yaNqcKHYEeuolPkAC7VaLg" client="_kGLkIKHYEeuolPkAC7VaLg" supplier="_PZCmsKHYEeuolPkAC7VaLg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_lfpRcKHYEeuolPkAC7VaLg" name="Logger">
        <ownedComment xmi:type="uml:Comment" xmi:id="_CAgp4KHZEeuolPkAC7VaLg">
          <body>This module contains tracing and debugging utilities. The original name was tracer.</body>
        </ownedComment>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_PZCmsKHYEeuolPkAC7VaLg" name="ServiceLocactor">
      <ownedComment xmi:type="uml:Comment" xmi:id="_DU5C4KHZEeuolPkAC7VaLg">
        <body>This module is an implementation of the ServiceLocator design pattern.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Model" xmi:id="_ZD_OIKI9EeunXvFhYSwR_g" name="DataModel">
      <packagedElement xmi:type="uml:Class" xmi:id="_emLrYKI9EeunXvFhYSwR_g" name="Transportation">
        <ownedComment xmi:type="uml:Comment" xmi:id="_0EACYKI-EeuUmPKl3HIBrg">
          <body>
Each transportation entry is a flight available for booking in our travel packages. For each one, we record: name, departure and arrival airports, days and times, airline name, flight number, rate, cabin class.</body>
        </ownedComment>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_6XCjMKI9EeunXvFhYSwR_g" name="airlineorder" type="_gIADcKI9EeunXvFhYSwR_g" association="_6XAuAKI9EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6XDKQKI9EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6XDKQaI9EeunXvFhYSwR_g" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_gIADcKI9EeunXvFhYSwR_g" name="AirlineOrder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_iGskwKI9EeunXvFhYSwR_g" name="OrderStatusHistory">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_GjlYkqI-EeunXvFhYSwR_g" name="document" type="_j0EFgKI9EeunXvFhYSwR_g" association="_GjkxgKI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GjlYk6I-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Gjl_oKI-EeunXvFhYSwR_g" value="*"/>
        </ownedAttribute>
        <ownedReception xmi:type="uml:Reception" xmi:id="_oLHdQKqsEeuRiIRzpnEATQ" name="Reception2"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_j0EFgKI9EeunXvFhYSwR_g" name="Document"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_mU5qkKI9EeunXvFhYSwR_g" name="LodgingOrder">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_QBUeUqI-EeunXvFhYSwR_g" name="lodging" type="_s1Y8EKI9EeunXvFhYSwR_g" association="_QBT3QKI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_QBUeU6I-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QBUeVKI-EeunXvFhYSwR_g" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_oECF4KI9EeunXvFhYSwR_g" name="PurchaseOrder">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_AV2D8qI-EeunXvFhYSwR_g" name="airlineorder" type="_gIADcKI9EeunXvFhYSwR_g" association="_AV1c4KI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AV2D86I-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AV2D9KI-EeunXvFhYSwR_g" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_EMK1QqI-EeunXvFhYSwR_g" name="orderstatushistory" type="_iGskwKI9EeunXvFhYSwR_g" association="_EMKOMKI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EMMqcKI-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EMOfoKI-EeunXvFhYSwR_g" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_K6a186I-EeunXvFhYSwR_g" name="activitypurchaseorder" type="_1pTowKI9EeunXvFhYSwR_g" association="_K6a18KI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_K6bdAKI-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K6bdAaI-EeunXvFhYSwR_g" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_OgOfAqI-EeunXvFhYSwR_g" name="lodgingorder" type="_mU5qkKI9EeunXvFhYSwR_g" association="_OgN38KI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OgOfA6I-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OgOfBKI-EeunXvFhYSwR_g" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_pavaIKI9EeunXvFhYSwR_g" name="UserAccount">
        <ownedComment xmi:type="uml:Comment" xmi:id="_ws4VkKI-EeuUmPKl3HIBrg">
          <body>An end user of the AdventureBuilder application. We store email id, password, and contact info.</body>
        </ownedComment>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_IiLzQKI-EeunXvFhYSwR_g" name="purchaseorder" type="_oECF4KI9EeunXvFhYSwR_g" association="_IiLMMKI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_IiLzQaI-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IiLzQqI-EeunXvFhYSwR_g" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_s1Y8EKI9EeunXvFhYSwR_g" name="Lodging">
        <ownedComment xmi:type="uml:Comment" xmi:id="_0-kNMKI-EeuUmPKl3HIBrg">
          <body>A hotel, guesthouse or B&amp;B that can be used for lodging in our travel packages. For each type of lodging, we store name, description, location info, room description, rates.</body>
        </ownedComment>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_U8OSEqI-EeunXvFhYSwR_g" name="package" type="_v6sgIKI9EeunXvFhYSwR_g" association="_U8NrAKI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_U8O5IKI-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U8O5IaI-EeunXvFhYSwR_g" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v6sgIKI9EeunXvFhYSwR_g" name="Package">
        <ownedComment xmi:type="uml:Comment" xmi:id="_2BFaIKI-EeuUmPKl3HIBrg">
          <body>A travel package available in our catalog. A package specifies lodging and a list of activities. Attributes of a package include name, description, rate per person, category and a representative image to show to the user.
</body>
        </ownedComment>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_bYVZ4qI-EeunXvFhYSwR_g" name="activityinplackage" type="_y2rJEKI9EeunXvFhYSwR_g" association="_bYUy0KI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_bYVZ46I-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_bYWA8KI-EeunXvFhYSwR_g" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_wsLAYKI9EeunXvFhYSwR_g" name="Category">
        <ownedComment xmi:type="uml:Comment" xmi:id="_3LpIwKI-EeuUmPKl3HIBrg">
          <body>A category of adventure travel packages. Examples: island packages, mountain adventures. This categorization helps the user to browse through our catalog of packages. Category data consists of a name, description and a representative image to show on the user screen.</body>
        </ownedComment>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_Yu1BAKI-EeunXvFhYSwR_g" name="package" type="_v6sgIKI9EeunXvFhYSwR_g" association="_Yu0Z8KI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Yu1BAaI-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Yu1BAqI-EeunXvFhYSwR_g" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_y2rJEKI9EeunXvFhYSwR_g" name="ActivityInPlackage"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_0oLi8KI9EeunXvFhYSwR_g" name="Activity">
        <ownedComment xmi:type="uml:Comment" xmi:id="_5D0yYKI-EeuUmPKl3HIBrg">
          <body>An adventure activity available. Examples: snorkeling, fishing, bird watching, rafting, surfing. Activities are available in selected packages. Information stored for each activity include: name, description, rate, and a representative image to show to the user.</body>
        </ownedComment>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_dHXukaI-EeunXvFhYSwR_g" name="activityinplackage" type="_y2rJEKI9EeunXvFhYSwR_g" association="_dHXHgKI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_dHXukqI-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dHXuk6I-EeunXvFhYSwR_g" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_e_cDcqI-EeunXvFhYSwR_g" name="activitypurchaseorder" type="_1pTowKI9EeunXvFhYSwR_g" association="_e_bcYKI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_e_cDc6I-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_e_cDdKI-EeunXvFhYSwR_g" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_1pTowKI9EeunXvFhYSwR_g" name="ActivityPurchaseOrder"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_6XAuAKI9EeunXvFhYSwR_g" memberEnd="_6XCjMKI9EeunXvFhYSwR_g _6XDKQqI9EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_6XB8IKI9EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_6XB8IaI9EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_6XDKQqI9EeunXvFhYSwR_g" name="transportation" type="_emLrYKI9EeunXvFhYSwR_g" association="_6XAuAKI9EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9U-7AKI9EeunXvFhYSwR_g"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_AV1c4KI-EeunXvFhYSwR_g" memberEnd="_AV2D8qI-EeunXvFhYSwR_g _AV2rAKI-EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_AV2D8KI-EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_AV2D8aI-EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_AV2rAKI-EeunXvFhYSwR_g" name="purchaseorder" type="_oECF4KI9EeunXvFhYSwR_g" association="_AV1c4KI-EeunXvFhYSwR_g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_EMKOMKI-EeunXvFhYSwR_g" memberEnd="_EMK1QqI-EeunXvFhYSwR_g _EMPtwKI-EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_EMK1QKI-EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_EMK1QaI-EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_EMPtwKI-EeunXvFhYSwR_g" name="purchaseorder" type="_oECF4KI9EeunXvFhYSwR_g" association="_EMKOMKI-EeunXvFhYSwR_g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GjkxgKI-EeunXvFhYSwR_g" memberEnd="_GjlYkqI-EeunXvFhYSwR_g _Gjl_oaI-EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_GjlYkKI-EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_GjlYkaI-EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_Gjl_oaI-EeunXvFhYSwR_g" name="orderstatushistory" type="_iGskwKI9EeunXvFhYSwR_g" association="_GjkxgKI-EeunXvFhYSwR_g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_IiLMMKI-EeunXvFhYSwR_g" memberEnd="_IiLzQKI-EeunXvFhYSwR_g _IiLzQ6I-EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_IiLMMaI-EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_IiLMMqI-EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_IiLzQ6I-EeunXvFhYSwR_g" name="useraccount" type="_pavaIKI9EeunXvFhYSwR_g" association="_IiLMMKI-EeunXvFhYSwR_g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_K6a18KI-EeunXvFhYSwR_g" memberEnd="_K6a186I-EeunXvFhYSwR_g _K6bdAqI-EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_K6a18aI-EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_K6a18qI-EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_K6bdAqI-EeunXvFhYSwR_g" name="purchaseorder" type="_oECF4KI9EeunXvFhYSwR_g" association="_K6a18KI-EeunXvFhYSwR_g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_OgN38KI-EeunXvFhYSwR_g" memberEnd="_OgOfAqI-EeunXvFhYSwR_g _OgOfBaI-EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_OgOfAKI-EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_OgOfAaI-EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_OgOfBaI-EeunXvFhYSwR_g" name="purchaseorder" type="_oECF4KI9EeunXvFhYSwR_g" association="_OgN38KI-EeunXvFhYSwR_g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_QBT3QKI-EeunXvFhYSwR_g" memberEnd="_QBUeUqI-EeunXvFhYSwR_g _QBVFYKI-EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_QBUeUKI-EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_QBUeUaI-EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_QBVFYKI-EeunXvFhYSwR_g" name="lodgingorder" type="_mU5qkKI9EeunXvFhYSwR_g" association="_QBT3QKI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RVSnoKI-EeunXvFhYSwR_g"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVUc0KI-EeunXvFhYSwR_g" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_U8NrAKI-EeunXvFhYSwR_g" memberEnd="_U8OSEqI-EeunXvFhYSwR_g _U8O5IqI-EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_U8OSEKI-EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_U8OSEaI-EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_U8O5IqI-EeunXvFhYSwR_g" name="lodging" type="_s1Y8EKI9EeunXvFhYSwR_g" association="_U8NrAKI-EeunXvFhYSwR_g">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WQR68KI-EeunXvFhYSwR_g"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Yu0Z8KI-EeunXvFhYSwR_g" memberEnd="_Yu1BAKI-EeunXvFhYSwR_g _Yu1BA6I-EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_Yu0Z8aI-EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_Yu0Z8qI-EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_Yu1BA6I-EeunXvFhYSwR_g" name="category" type="_wsLAYKI9EeunXvFhYSwR_g" association="_Yu0Z8KI-EeunXvFhYSwR_g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_bYUy0KI-EeunXvFhYSwR_g" memberEnd="_bYVZ4qI-EeunXvFhYSwR_g _bYWA8aI-EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_bYVZ4KI-EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_bYVZ4aI-EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_bYWA8aI-EeunXvFhYSwR_g" name="package" type="_v6sgIKI9EeunXvFhYSwR_g" association="_bYUy0KI-EeunXvFhYSwR_g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dHXHgKI-EeunXvFhYSwR_g" memberEnd="_dHXukaI-EeunXvFhYSwR_g _dHXulKI-EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_dHXHgaI-EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_dHXukKI-EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_dHXulKI-EeunXvFhYSwR_g" name="activity" type="_0oLi8KI9EeunXvFhYSwR_g" association="_dHXHgKI-EeunXvFhYSwR_g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_e_bcYKI-EeunXvFhYSwR_g" memberEnd="_e_cDcqI-EeunXvFhYSwR_g _e_cqgKI-EeunXvFhYSwR_g">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_e_cDcKI-EeunXvFhYSwR_g" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_e_cDcaI-EeunXvFhYSwR_g" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_e_cqgKI-EeunXvFhYSwR_g" name="activity" type="_0oLi8KI9EeunXvFhYSwR_g" association="_e_bcYKI-EeunXvFhYSwR_g"/>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_EJwoQKF_Eeu26-oh2DfeGg" name="Comportement">
    <packagedElement xmi:type="uml:Interaction" xmi:id="_SWi3EKF_Eeu26-oh2DfeGg" name="Purchase Order within WorkflowManager">
      <ownedComment xmi:type="uml:Comment" xmi:id="_aD_q8KF_Eeu26-oh2DfeGg">
        <body>https://wiki.sei.cmu.edu/confluence/display/SAD/Workflowmanager+Module+Uses+View
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_hBwuUKF_Eeu26-oh2DfeGg" name="" type="_VMQWMJxsEeuSfsyhIF5DRw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_mXO-MKF_Eeu26-oh2DfeGg" name=""/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_qCnDwKF_Eeu26-oh2DfeGg" name="" type="_d4y2cKF4Eeu26-oh2DfeGg"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_sW720KF_Eeu26-oh2DfeGg" name=""/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_vSV4AKF_Eeu26-oh2DfeGg" name=""/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_w19m4KF_Eeu26-oh2DfeGg" name=""/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_yzbZIKF_Eeu26-oh2DfeGg" name="" type="_h6QWMKF3Eeu26-oh2DfeGg"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_2eCpsKF_Eeu26-oh2DfeGg" name="" type="_MU1s8KF3Eeu26-oh2DfeGg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_hBwHQKF_Eeu26-oh2DfeGg" name="Vacationer" represents="_hBwuUKF_Eeu26-oh2DfeGg" coveredBy="_sDDccaHKEeu26-oh2DfeGg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_mXOXIKF_Eeu26-oh2DfeGg" name="consumerWebSite" represents="_mXO-MKF_Eeu26-oh2DfeGg" coveredBy="_sDDccKHKEeu26-oh2DfeGg _ORL5sKHLEeu26-oh2DfeGg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_qCmcsKF_Eeu26-oh2DfeGg" name="poEndpointBean" represents="_qCnDwKF_Eeu26-oh2DfeGg" coveredBy="_Uv4bcaHLEeu26-oh2DfeGg _ORLSoaHLEeu26-oh2DfeGg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_sW7PwKF_Eeu26-oh2DfeGg" name="workflowManager" represents="_sW720KF_Eeu26-oh2DfeGg" coveredBy="_Uv4bcKHLEeu26-oh2DfeGg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_vSVQ8KF_Eeu26-oh2DfeGg" name="poHandler" represents="_vSV4AKF_Eeu26-oh2DfeGg" coveredBy="_nS2nYKHLEeu26-oh2DfeGg _rj6M4KHLEeu26-oh2DfeGg _rkjtIKHLEeu26-oh2DfeGg _ZoyOoKHMEeu26-oh2DfeGg _Zph1gaHMEeu26-oh2DfeGg _6IFWEKHNEeu26-oh2DfeGg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_w18_0KF_Eeu26-oh2DfeGg" name="poReceiver" represents="_w19m4KF_Eeu26-oh2DfeGg" coveredBy="_nS2AUaHLEeu26-oh2DfeGg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_yzayEKF_Eeu26-oh2DfeGg" name="creditCardVerifier" represents="_yzbZIKF_Eeu26-oh2DfeGg" coveredBy="_rj6M4aHLEeu26-oh2DfeGg _rkjGEKHLEeu26-oh2DfeGg _rkfbsKHLEeu26-oh2DfeGg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_2eCCoKF_Eeu26-oh2DfeGg" name="crmBean" represents="_2eCpsKF_Eeu26-oh2DfeGg" coveredBy="_Zoy1sKHMEeu26-oh2DfeGg _Zph1gKHMEeu26-oh2DfeGg _6IF9IKHNEeu26-oh2DfeGg _ZpeyMKHMEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_sDDccKHKEeu26-oh2DfeGg" name="Message23SendEvent" covered="_mXOXIKF_Eeu26-oh2DfeGg" message="_sDC1YKHKEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_sDDccaHKEeu26-oh2DfeGg" name="Message23ReceiveEvent" covered="_hBwHQKF_Eeu26-oh2DfeGg" message="_sDC1YKHKEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_nS2AUaHLEeu26-oh2DfeGg" name="Message51SendEvent" covered="_w18_0KF_Eeu26-oh2DfeGg" message="_nS2AUKHLEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_nS2nYKHLEeu26-oh2DfeGg" name="Message51ReceiveEvent" covered="_vSVQ8KF_Eeu26-oh2DfeGg" message="_nS2AUKHLEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Uv4bcKHLEeu26-oh2DfeGg" name="Message37SendEvent" covered="_sW7PwKF_Eeu26-oh2DfeGg" message="_Uv30YKHLEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Uv4bcaHLEeu26-oh2DfeGg" name="Message37ReceiveEvent" covered="_qCmcsKF_Eeu26-oh2DfeGg" message="_Uv30YKHLEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_ORLSoaHLEeu26-oh2DfeGg" name="Message30SendEvent" covered="_qCmcsKF_Eeu26-oh2DfeGg" message="_ORLSoKHLEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_rj6M4KHLEeu26-oh2DfeGg" name="Message53SendEvent" covered="_vSVQ8KF_Eeu26-oh2DfeGg" message="_rj5l0KHLEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_rj6M4aHLEeu26-oh2DfeGg" name="Message53ReceiveEvent" covered="_yzayEKF_Eeu26-oh2DfeGg" message="_rj5l0KHLEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:BehaviorExecutionSpecification" xmi:id="_rkfbsKHLEeu26-oh2DfeGg" name="BehaviorExecutionSpecification56" covered="_yzayEKF_Eeu26-oh2DfeGg" finish="_rkjGEKHLEeu26-oh2DfeGg" start="_rj6M4aHLEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_ORL5sKHLEeu26-oh2DfeGg" name="Message30ReceiveEvent" covered="_mXOXIKF_Eeu26-oh2DfeGg" message="_ORLSoKHLEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_rkjGEKHLEeu26-oh2DfeGg" name="Message58SendEvent" covered="_yzayEKF_Eeu26-oh2DfeGg" message="_rkifAKHLEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_rkjtIKHLEeu26-oh2DfeGg" name="Message58ReceiveEvent" covered="_vSVQ8KF_Eeu26-oh2DfeGg" message="_rkifAKHLEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_ZoyOoKHMEeu26-oh2DfeGg" name="Message63SendEvent" covered="_vSVQ8KF_Eeu26-oh2DfeGg" message="_ZoxnkKHMEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Zoy1sKHMEeu26-oh2DfeGg" name="Message63ReceiveEvent" covered="_2eCCoKF_Eeu26-oh2DfeGg" message="_ZoxnkKHMEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:BehaviorExecutionSpecification" xmi:id="_ZpeyMKHMEeu26-oh2DfeGg" name="BehaviorExecutionSpecification66" covered="_2eCCoKF_Eeu26-oh2DfeGg" finish="_Zph1gKHMEeu26-oh2DfeGg" start="_Zoy1sKHMEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Zph1gKHMEeu26-oh2DfeGg" name="Message68SendEvent" covered="_2eCCoKF_Eeu26-oh2DfeGg" message="_ZphOcKHMEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_Zph1gaHMEeu26-oh2DfeGg" name="Message68ReceiveEvent" covered="_vSVQ8KF_Eeu26-oh2DfeGg" message="_ZphOcKHMEeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_6IFWEKHNEeu26-oh2DfeGg" name="Message67SendEvent" covered="_vSVQ8KF_Eeu26-oh2DfeGg"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_6IF9IKHNEeu26-oh2DfeGg" name="Message67ReceiveEvent" covered="_2eCCoKF_Eeu26-oh2DfeGg"/>
      <message xmi:type="uml:Message" xmi:id="_sCh4AKHKEeu26-oh2DfeGg" name="submitOrder()"/>
      <message xmi:type="uml:Message" xmi:id="_sDC1YKHKEeu26-oh2DfeGg" name="Message23" messageSort="reply" receiveEvent="_sDDccaHKEeu26-oh2DfeGg" sendEvent="_sDDccKHKEeu26-oh2DfeGg"/>
      <message xmi:type="uml:Message" xmi:id="_OQsxgKHLEeu26-oh2DfeGg" name="submitPurchaseOrder(PurchaseOrder)"/>
      <message xmi:type="uml:Message" xmi:id="_ORLSoKHLEeu26-oh2DfeGg" name="Message30" messageSort="reply" receiveEvent="_ORL5sKHLEeu26-oh2DfeGg" sendEvent="_ORLSoaHLEeu26-oh2DfeGg"/>
      <message xmi:type="uml:Message" xmi:id="_UvXeEKHLEeu26-oh2DfeGg" name="purchaseOrderMsg()"/>
      <message xmi:type="uml:Message" xmi:id="_Uv30YKHLEeu26-oh2DfeGg" name="Message37" messageSort="reply" receiveEvent="_Uv4bcaHLEeu26-oh2DfeGg" sendEvent="_Uv4bcKHLEeu26-oh2DfeGg"/>
      <message xmi:type="uml:Message" xmi:id="_gJszYKHLEeu26-oh2DfeGg" name="handle(Message)"/>
      <message xmi:type="uml:Message" xmi:id="_nS2AUKHLEeu26-oh2DfeGg" name="Message51" messageSort="reply" receiveEvent="_nS2nYKHLEeu26-oh2DfeGg" sendEvent="_nS2AUaHLEeu26-oh2DfeGg"/>
      <message xmi:type="uml:Message" xmi:id="_rj5l0KHLEeu26-oh2DfeGg" name="verifyCreditCard()" receiveEvent="_rj6M4aHLEeu26-oh2DfeGg" sendEvent="_rj6M4KHLEeu26-oh2DfeGg"/>
      <message xmi:type="uml:Message" xmi:id="_rkifAKHLEeu26-oh2DfeGg" name="Message58" messageSort="reply" receiveEvent="_rkjtIKHLEeu26-oh2DfeGg" sendEvent="_rkjGEKHLEeu26-oh2DfeGg"/>
      <message xmi:type="uml:Message" xmi:id="_RSrfUKHMEeu26-oh2DfeGg"/>
      <message xmi:type="uml:Message" xmi:id="_ZoxnkKHMEeu26-oh2DfeGg" name="sendMessage()" receiveEvent="_Zoy1sKHMEeu26-oh2DfeGg" sendEvent="_ZoyOoKHMEeu26-oh2DfeGg"/>
      <message xmi:type="uml:Message" xmi:id="_ZphOcKHMEeu26-oh2DfeGg" name="Message68" messageSort="reply" receiveEvent="_Zph1gaHMEeu26-oh2DfeGg" sendEvent="_Zph1gKHMEeu26-oh2DfeGg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Interaction" xmi:id="_ThqP0KICEeuZV_N0fPslHQ" name="Sequence diagram of workflowmanager handling a purchase order request" isActive="true">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_na3O4KICEeuZV_N0fPslHQ" name="" type="_nehhgKHvEeu0VdhtLJh5Nw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_rrDRsaICEeuZV_N0fPslHQ" name="" type="_ZGeBYKHwEeu0VdhtLJh5Nw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_u0IigaICEeuZV_N0fPslHQ" name="" type="_oeKHoKHxEeu0VdhtLJh5Nw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_xu0yAKICEeuZV_N0fPslHQ" name="" type="_h6QWMKF3Eeu26-oh2DfeGg"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_0UNf4aICEeuZV_N0fPslHQ" name="" type="_yTNzkKF1Eeu26-oh2DfeGg"/>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_WLKosKICEeuZV_N0fPslHQ" name="poEndpointBean" represents="_qCnDwKF_Eeu26-oh2DfeGg" coveredBy="_4IwvkKICEeuZV_N0fPslHQ _4JLmUaICEeuZV_N0fPslHQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_0-XasKIDEeuZV_N0fPslHQ">
          <body>This class is a stateless session bean. It provides the implementation for the OpcPurchaseOrderService web service. When it receives a purchase order, it checks that all arguments are valid and if ok dispatches the order to the workflowmanager sending a message to a JMS queue.</body>
        </ownedComment>
      </lifeline>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_na2n0KICEeuZV_N0fPslHQ" name="" represents="_na3O4KICEeuZV_N0fPslHQ" coveredBy="_4IxWoKICEeuZV_N0fPslHQ _7nrtgKICEeuZV_N0fPslHQ _7oGkQKICEeuZV_N0fPslHQ _4JLmUKICEeuZV_N0fPslHQ _4JGGwKICEeuZV_N0fPslHQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_78sewKIDEeuZV_N0fPslHQ">
          <body>This class is a message-driven bean. It is activated when there is a message in the queue. It processes two kinds of messages:
   * purchase order message: in this case it calls the PoHandler class. The sequence diagram down below shows the interactions involved in processing a purchase order.
   * invoice message: this is a message that came from one of the external suppliers in response for a booking order. WorkFlowManagerBean calls the InvoiceHandler class to take care of this messages.

WorkFlowManagerBean also sets a timer with the EJB container so that it is activated periodically to check the status of all pending orders.</body>
        </ownedComment>
      </lifeline>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_rrDRsKICEeuZV_N0fPslHQ" name="verifyCreditCard" represents="_rrDRsaICEeuZV_N0fPslHQ" coveredBy="_7nsUkKICEeuZV_N0fPslHQ _CVzyYKIDEeuZV_N0fPslHQ _CWS6kKIDEeuZV_N0fPslHQ _QKGBoKIDEeuZV_N0fPslHQ _QKlw4KIDEeuZV_N0fPslHQ _Re6-YKI2EeufVYq1WyThxA _Re_P0KI2EeufVYq1WyThxA _eVm88KI2EeufVYq1WyThxA _eWmbcKI2EeufVYq1WyThxA _7oF9MKICEeuZV_N0fPslHQ _7oDg8KICEeuZV_N0fPslHQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_911KoKIDEeuZV_N0fPslHQ">
          <body>The PoHandler class is not visible outside the workflowmanager package. It acts as a delegate of the WorkFlowManagerBean class to handle any purchase order request. When processing a request, it first uses POReceiver and processmanager to insert the order in the database in the Pending state. Then it calls CreditCardVerifier synchronously to charge the customer's credit card. If the credit card is OK, it sends a message to a JMS queue to be processed by OrderFillerBean. Finally, it sends another JMS message to CrmBean, which will create and send an email to the customer informing about the status of his order.</body>
        </ownedComment>
      </lifeline>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_u0IigKICEeuZV_N0fPslHQ" name="" represents="_u0IigaICEeuZV_N0fPslHQ" coveredBy="_CVzyYaIDEeuZV_N0fPslHQ _CWSTgaIDEeuZV_N0fPslHQ _Re6-YKI2EeufVYq1WyThxA _Re_P0KI2EeufVYq1WyThxA _CWP3QKIDEeuZV_N0fPslHQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_B1YJYKIEEeuZV_N0fPslHQ">
          <body>The purchase order receiver's responsibility is to create a purchase order entity bean and persist it in a relational database. The POReceiver is implemented as a Java class and it creates a PurchaseOrder entity bean.</body>
        </ownedComment>
      </lifeline>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_xu0K8KICEeuZV_N0fPslHQ" name="" represents="_xu0yAKICEeuZV_N0fPslHQ" coveredBy="_QKGBoaIDEeuZV_N0fPslHQ _QKlJ0aIDEeuZV_N0fPslHQ _Re6-YKI2EeufVYq1WyThxA _Re_P0KI2EeufVYq1WyThxA _QKitkKIDEeuZV_N0fPslHQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_DbbhMKIEEeuZV_N0fPslHQ">
          <body>This class is used to verify the credit information for a user. It contacts an external web service to get the banking related information for the credit card number specified.</body>
        </ownedComment>
      </lifeline>
      <lifeline xmi:type="uml:Lifeline" xmi:id="_0UNf4KICEeuZV_N0fPslHQ" name="" represents="_0UNf4aICEeuZV_N0fPslHQ" coveredBy="_Re6-YKI2EeufVYq1WyThxA _Re_P0KI2EeufVYq1WyThxA _eVm88aI2EeufVYq1WyThxA _eWl0YKI2EeufVYq1WyThxA _eWd4kKI2EeufVYq1WyThxA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_IzLB8KIEEeuZV_N0fPslHQ">
          <body>This class is a message-driven bean. It is responsible for sending out all the booking requests to the airline, lodging and activity suppliers involved in a given purchase order.</body>
        </ownedComment>
      </lifeline>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_4IxWoKICEeuZV_N0fPslHQ" name="Message12ReceiveEvent" covered="_na2n0KICEeuZV_N0fPslHQ" message="_4IuTUKICEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:BehaviorExecutionSpecification" xmi:id="_4JGGwKICEeuZV_N0fPslHQ" name="BehaviorExecutionSpecification15" covered="_na2n0KICEeuZV_N0fPslHQ" finish="_4JLmUKICEeuZV_N0fPslHQ" start="_4IxWoKICEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_4IwvkKICEeuZV_N0fPslHQ" name="Message12SendEvent" covered="_WLKosKICEeuZV_N0fPslHQ" message="_4IuTUKICEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_7nrtgKICEeuZV_N0fPslHQ" name="Message19SendEvent" covered="_na2n0KICEeuZV_N0fPslHQ" message="_7nrGcKICEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_7nsUkKICEeuZV_N0fPslHQ" name="Message19ReceiveEvent" covered="_rrDRsKICEeuZV_N0fPslHQ" message="_7nrGcKICEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:BehaviorExecutionSpecification" xmi:id="_7oDg8KICEeuZV_N0fPslHQ" name="BehaviorExecutionSpecification22" covered="_rrDRsKICEeuZV_N0fPslHQ" finish="_7oF9MKICEeuZV_N0fPslHQ" start="_7nsUkKICEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_CVzyYKIDEeuZV_N0fPslHQ" name="Message26SendEvent" covered="_rrDRsKICEeuZV_N0fPslHQ" message="_CVzLUKIDEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_CVzyYaIDEeuZV_N0fPslHQ" name="Message26ReceiveEvent" covered="_u0IigKICEeuZV_N0fPslHQ" message="_CVzLUKIDEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:BehaviorExecutionSpecification" xmi:id="_CWP3QKIDEeuZV_N0fPslHQ" name="BehaviorExecutionSpecification29" covered="_u0IigKICEeuZV_N0fPslHQ" finish="_CWSTgaIDEeuZV_N0fPslHQ" start="_CVzyYaIDEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_CWSTgaIDEeuZV_N0fPslHQ" name="Message31SendEvent" covered="_u0IigKICEeuZV_N0fPslHQ" message="_CWSTgKIDEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_CWS6kKIDEeuZV_N0fPslHQ" name="Message31ReceiveEvent" covered="_rrDRsKICEeuZV_N0fPslHQ" message="_CWSTgKIDEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_QKGBoKIDEeuZV_N0fPslHQ" name="Message33SendEvent" covered="_rrDRsKICEeuZV_N0fPslHQ" message="_QKFakKIDEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_QKGBoaIDEeuZV_N0fPslHQ" name="Message33ReceiveEvent" covered="_xu0K8KICEeuZV_N0fPslHQ" message="_QKFakKIDEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:BehaviorExecutionSpecification" xmi:id="_QKitkKIDEeuZV_N0fPslHQ" name="BehaviorExecutionSpecification36" covered="_xu0K8KICEeuZV_N0fPslHQ" finish="_QKlJ0aIDEeuZV_N0fPslHQ" start="_QKGBoaIDEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_QKlJ0aIDEeuZV_N0fPslHQ" name="Message38SendEvent" covered="_xu0K8KICEeuZV_N0fPslHQ" message="_QKlJ0KIDEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_QKlw4KIDEeuZV_N0fPslHQ" name="Message38ReceiveEvent" covered="_rrDRsKICEeuZV_N0fPslHQ" message="_QKlJ0KIDEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:CombinedFragment" xmi:id="_Re6-YKI2EeufVYq1WyThxA" name="verifyCreditCard" covered="_u0IigKICEeuZV_N0fPslHQ _rrDRsKICEeuZV_N0fPslHQ _0UNf4KICEeuZV_N0fPslHQ _xu0K8KICEeuZV_N0fPslHQ" interactionOperator="alt">
        <operand xmi:type="uml:InteractionOperand" xmi:id="_Re_P0KI2EeufVYq1WyThxA" name="creditCardValid==true" covered="_u0IigKICEeuZV_N0fPslHQ _rrDRsKICEeuZV_N0fPslHQ _0UNf4KICEeuZV_N0fPslHQ _xu0K8KICEeuZV_N0fPslHQ"/>
      </fragment>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_eVm88KI2EeufVYq1WyThxA" name="Message45SendEvent" covered="_rrDRsKICEeuZV_N0fPslHQ" message="_eVlHwKI2EeufVYq1WyThxA"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_eVm88aI2EeufVYq1WyThxA" name="Message45ReceiveEvent" covered="_0UNf4KICEeuZV_N0fPslHQ" message="_eVlHwKI2EeufVYq1WyThxA"/>
      <fragment xmi:type="uml:BehaviorExecutionSpecification" xmi:id="_eWd4kKI2EeufVYq1WyThxA" name="BehaviorExecutionSpecification48" covered="_0UNf4KICEeuZV_N0fPslHQ" finish="_eWl0YKI2EeufVYq1WyThxA" start="_eVm88aI2EeufVYq1WyThxA"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_eWl0YKI2EeufVYq1WyThxA" name="Message50SendEvent" covered="_0UNf4KICEeuZV_N0fPslHQ" message="_eWlNUKI2EeufVYq1WyThxA"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_eWmbcKI2EeufVYq1WyThxA" name="Message50ReceiveEvent" covered="_rrDRsKICEeuZV_N0fPslHQ" message="_eWlNUKI2EeufVYq1WyThxA"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_7oF9MKICEeuZV_N0fPslHQ" name="Message24SendEvent" covered="_rrDRsKICEeuZV_N0fPslHQ" message="_7oFWIKICEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_7oGkQKICEeuZV_N0fPslHQ" name="Message24ReceiveEvent" covered="_na2n0KICEeuZV_N0fPslHQ" message="_7oFWIKICEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_4JLmUKICEeuZV_N0fPslHQ" name="Message17SendEvent" covered="_na2n0KICEeuZV_N0fPslHQ" message="_4JK_QKICEeuZV_N0fPslHQ"/>
      <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_4JLmUaICEeuZV_N0fPslHQ" name="Message17ReceiveEvent" covered="_WLKosKICEeuZV_N0fPslHQ" message="_4JK_QKICEeuZV_N0fPslHQ"/>
      <message xmi:type="uml:Message" xmi:id="_4IuTUKICEeuZV_N0fPslHQ" name="PO_Document()" receiveEvent="_4IxWoKICEeuZV_N0fPslHQ" sendEvent="_4IwvkKICEeuZV_N0fPslHQ"/>
      <message xmi:type="uml:Message" xmi:id="_4JK_QKICEeuZV_N0fPslHQ" name="Message17" messageSort="reply" receiveEvent="_4JLmUaICEeuZV_N0fPslHQ" sendEvent="_4JLmUKICEeuZV_N0fPslHQ"/>
      <message xmi:type="uml:Message" xmi:id="_7nrGcKICEeuZV_N0fPslHQ" name="handle()" receiveEvent="_7nsUkKICEeuZV_N0fPslHQ" sendEvent="_7nrtgKICEeuZV_N0fPslHQ"/>
      <message xmi:type="uml:Message" xmi:id="_7oFWIKICEeuZV_N0fPslHQ" name="Message24" messageSort="reply" receiveEvent="_7oGkQKICEeuZV_N0fPslHQ" sendEvent="_7oF9MKICEeuZV_N0fPslHQ"/>
      <message xmi:type="uml:Message" xmi:id="_CVzLUKIDEeuZV_N0fPslHQ" name="Message26" receiveEvent="_CVzyYaIDEeuZV_N0fPslHQ" sendEvent="_CVzyYKIDEeuZV_N0fPslHQ" signature="_tbMhAKH_EeuZV_N0fPslHQ"/>
      <message xmi:type="uml:Message" xmi:id="_CWSTgKIDEeuZV_N0fPslHQ" name="Message31" messageSort="reply" receiveEvent="_CWS6kKIDEeuZV_N0fPslHQ" sendEvent="_CWSTgaIDEeuZV_N0fPslHQ"/>
      <message xmi:type="uml:Message" xmi:id="_QKFakKIDEeuZV_N0fPslHQ" name="Message33" receiveEvent="_QKGBoaIDEeuZV_N0fPslHQ" sendEvent="_QKGBoKIDEeuZV_N0fPslHQ" signature="_plQxQKH_EeuZV_N0fPslHQ"/>
      <message xmi:type="uml:Message" xmi:id="_QKlJ0KIDEeuZV_N0fPslHQ" name="Message38" messageSort="reply" receiveEvent="_QKlw4KIDEeuZV_N0fPslHQ" sendEvent="_QKlJ0aIDEeuZV_N0fPslHQ"/>
      <message xmi:type="uml:Message" xmi:id="_eVlHwKI2EeufVYq1WyThxA" name="PO_Document()" receiveEvent="_eVm88aI2EeufVYq1WyThxA" sendEvent="_eVm88KI2EeufVYq1WyThxA"/>
      <message xmi:type="uml:Message" xmi:id="_eWlNUKI2EeufVYq1WyThxA" name="Message50" messageSort="reply" receiveEvent="_eWmbcKI2EeufVYq1WyThxA" sendEvent="_eWl0YKI2EeufVYq1WyThxA"/>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_vXcfsKptEeuIwanZSjCYHQ" name="Experimentation">
    <packagedElement xmi:type="uml:Package" xmi:id="_yyqCUKptEeuIwanZSjCYHQ" name="Package1">
      <ownedComment xmi:type="uml:Comment" xmi:id="_l8qTYKqFEeuoXa-x57iZ9g">
        <body>Allo mon coco #333333
</body>
      </ownedComment>
      <ownedComment xmi:type="uml:Comment" xmi:id="_XxeR8KqDEeuoXa-x57iZ9g" annotatedElement="_yyqCUKptEeuIwanZSjCYHQ">
        <body>Ceci est la documentatin du package #1 qui est transformé en commentaire XXXXXX</body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="_KTFygKqJEeu804Hdqgji2A" name="Class6"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_KtVegKqJEeu804Hdqgji2A" name="Class7">
        <nestedClassifier xmi:type="uml:Class" xmi:id="_LBgXsKqJEeu804Hdqgji2A" name="Class1"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_LfPckKqJEeu804Hdqgji2A" name="Class8"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_zFkXQKptEeuIwanZSjCYHQ" name="Package2">
      <ownedComment xmi:type="uml:Comment" xmi:id="__7XtkKqEEeuoXa-x57iZ9g">
        <ownedComment xmi:type="uml:Comment" xmi:id="_kGoXIKqLEeu804Hdqgji2A" annotatedElement="_zFkXQKptEeuIwanZSjCYHQ __7XtkKqEEeuoXa-x57iZ9g">
          <body>{@link #_UBWQQKp4EeuoXa-x57iZ9g}</body>
        </ownedComment>
        <ownedComment xmi:type="uml:Comment" xmi:id="_oIjUcKqLEeu804Hdqgji2A" annotatedElement="__7XtkKqEEeuoXa-x57iZ9g">
          <body></body>
        </ownedComment>
        <body>Ceci est la documentation du package no 2
aks;dlkf;asf

asdfasd
f
as
f
sdaf
asd
f
sad
</body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="_EDy3UKqMEeu804Hdqgji2A" name="Class2"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_EXa98KqMEeu804Hdqgji2A" name="Class3"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_zfNmUKptEeuIwanZSjCYHQ" name="Package3">
      <ownedComment xmi:type="uml:Comment" xmi:id="_B6MKsKqFEeuoXa-x57iZ9g">
        <body>Ceci est la documentation du package 33</body>
      </ownedComment>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="_xtpzAKp2EeuoXa-x57iZ9g" name="1-Requirements">
    <packagedElement xmi:type="uml:Package" xmi:id="_XI_vsJxsEeuSfsyhIF5DRw" name="UseCases">
      <ownedComment xmi:type="uml:Comment" xmi:id="_RFRrAJxyEeuSfsyhIF5DRw">
        <body>The system used as an example in this architecture document is an adapted version of the Adventure Builder Reference application, which was developed in the context of the Java BluePrints program at Sun Microsystems. This application was chosen because the functionality is easy to understand, and the source code, documentation, and other artifacts are publicly available for download. Also available is a book on Web services that explains the design and implementation of the application [Singh 2004].

	The architecture documented here does not reflect exactly the implementation provided by Sun. To make it a more interesting and realistic example of an SOA solution, we made several assumptions about the business context and requirements of the system, and documented design elements and relations that deviate from the original implementation. Click for more information.</body>
      </ownedComment>
      <ownedComment xmi:type="uml:Comment" xmi:id="_-AiGoKqGEeuoXa-x57iZ9g">
        <ownedComment xmi:type="uml:Comment" xmi:id="__l3FsKqGEeuoXa-x57iZ9g">
          <body>Use case comment
</body>
        </ownedComment>
      </ownedComment>
      <packagedElement xmi:type="uml:UseCase" xmi:id="_WBk0oJxsEeuSfsyhIF5DRw" name="UC01 Browse Cataloog" classifierBehavior="_-_UvEJxtEeuSfsyhIF5DRw">
        <ownedComment xmi:type="uml:Comment" xmi:id="__NwhwJxvEeuSfsyhIF5DRw" annotatedElement="_WBk0oJxsEeuSfsyhIF5DRw">
          <body> The user can visit the Adventure Builder Web site and browse the catalog of travel packages, which include flights to specific destinations, lodging options, and activities that can be purchased in advance. Activities include mountain biking, fishing, surfing classes, hot air balloon tours, and scuba diving. </body>
        </ownedComment>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="_-_UvEJxtEeuSfsyhIF5DRw" name="Activity1">
          <ownedBehavior xmi:type="uml:Activity" xmi:id="_BIAS0JxuEeuSfsyhIF5DRw" name="Activity1"/>
        </ownedBehavior>
      </packagedElement>
      <packagedElement xmi:type="uml:UseCase" xmi:id="_WVLtIJxsEeuSfsyhIF5DRw" name="UC2 Order travel package">
        <ownedComment xmi:type="uml:Comment" xmi:id="_P7fqYJxwEeuSfsyhIF5DRw">
          <body> The user can place an order for a vacation package. To process this order, the system has to interact with several external entities. A bank will approve the customer payment, airline companies will provide the flights, lodging providers will book the hotel rooms, and businesses that provide vacation activities will schedule the activities selected by the customer.
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:UseCase" xmi:id="_UwcAEJxwEeuSfsyhIF5DRw" name="UC3 Track order">
        <ownedComment xmi:type="uml:Comment" xmi:id="_raOQYJxwEeuSfsyhIF5DRw" annotatedElement="_UwcAEJxwEeuSfsyhIF5DRw">
          <body>After an order is placed, the user can return to check the status of his/her order. This is necessary because some interactions with external entities are processed in the background and may take hours or days to complete.</body>
        </ownedComment>
        <ownedComment xmi:type="uml:Comment" xmi:id="_sgjmUJxwEeuSfsyhIF5DRw">
          <body> After an order is placed, the user can return to check the status of his/her order. This is necessary because some interactions with external entities are processed in the background and may take hours or days to complete.</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:UseCase" xmi:id="_v1zD0JxwEeuSfsyhIF5DRw" name="UC4 Update Catalogue">
        <ownedComment xmi:type="uml:Comment" xmi:id="_WdcfAJxxEeuSfsyhIF5DRw">
          <body>The internal system periodically interacts with its business partners (transportation, lodging, and activity providers) to update the catalog with the most recent offerings.</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Jxvd4JxwEeuSfsyhIF5DRw" client="_VMQWMJxsEeuSfsyhIF5DRw" supplier="_WBk0oJxsEeuSfsyhIF5DRw"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_TcZlUJxwEeuSfsyhIF5DRw" client="_VMQWMJxsEeuSfsyhIF5DRw" supplier="_WVLtIJxsEeuSfsyhIF5DRw"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_upsdEJxwEeuSfsyhIF5DRw" client="_VMQWMJxsEeuSfsyhIF5DRw" supplier="_UwcAEJxwEeuSfsyhIF5DRw"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_CgvOQKF6Eeu26-oh2DfeGg" client="_upsdEJxwEeuSfsyhIF5DRw" supplier="_v1zD0JxwEeuSfsyhIF5DRw"/>
      <packagedElement xmi:type="uml:Actor" xmi:id="_VMQWMJxsEeuSfsyhIF5DRw" name="Vacationer">
        <ownedComment xmi:type="uml:Comment" xmi:id="_BYpMAKBBEeuTlOifvX46DQ">
          <body>The user can visit the Adventure Builder Web site and browse the catalog of travel packages, which include flights to specific destinations, lodging options, and activities that can be purchased in advance. Activities include mountain biking, fishing, surfing classes, hot air balloon tours, and scuba diving. The user can select transportation, accommodation, and various activities to build his/her own adventure trip.

The user can place an order for a vacation package. To process this order, the system has to interact with several external entities. A bank will approve the customer payment, airline companies will provide the flights, lodging providers will book the hotel rooms, and businesses that provide vacation activities will schedule the activities selected by the customer.

After an order is placed, the user can return to check the status of his/her order. This is necessary because some interactions with external entities are processed in the background and may take hours or days to complete.

The internal system periodically interacts with its business partners (transportation, lodging, and activity providers) to update the catalog with the most recent offerings.</body>
        </ownedComment>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_aDLeAKA_EeuTlOifvX46DQ" name="QualityAttributes">
      <packagedElement xmi:type="uml:Package" xmi:id="_qfmlwJxxEeuSfsyhIF5DRw" name="Modifiability">
        <packagedElement xmi:type="uml:UseCase" xmi:id="_sge4YJxxEeuSfsyhIF5DRw" name="QAS1">
          <ownedComment xmi:type="uml:Comment" xmi:id="_upi2oJxxEeuSfsyhIF5DRw">
            <body>. A new business partner (airline, lodging, or activity provider) that uses its own web services interface is added to the system in no more than 10 person-days of effort for the implementation. The business goal is easy integration with new business partners.</body>
          </ownedComment>
          <ownedComment xmi:type="uml:Comment" xmi:id="_rXeY4J3lEeuOqPdFuM_jqA" annotatedElement="_sge4YJxxEeuSfsyhIF5DRw">
            <body></body>
          </ownedComment>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_xV_10JxxEeuSfsyhIF5DRw" name="Performance">
        <packagedElement xmi:type="uml:UseCase" xmi:id="_yQDDQJxxEeuSfsyhIF5DRw" name="QAS2">
          <ownedComment xmi:type="uml:Comment" xmi:id="_1RBg8JxxEeuSfsyhIF5DRw">
            <body> A user places an order for an adventure travel package to the Consumer Web site. The user is notified on screen that the order has been successfully submitted and is being processed in less than five seconds.</body>
          </ownedComment>
        </packagedElement>
        <packagedElement xmi:type="uml:UseCase" xmi:id="_15TB4JxxEeuSfsyhIF5DRw" name="QAS3">
          <ownedComment xmi:type="uml:Comment" xmi:id="_4xzgEJxxEeuSfsyhIF5DRw">
            <body> Up to 500 users click to see the catalog of adventure packages following a random distribution over 1 minute; the system is under normal operating conditions; the maximal latency to serve the first page of content is under 5 seconds; average latency for same is less than 2 seconds.</body>
          </ownedComment>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5KAksJxxEeuSfsyhIF5DRw" name="Reliability">
        <packagedElement xmi:type="uml:UseCase" xmi:id="_6D6BIJxxEeuSfsyhIF5DRw" name="AQS4">
          <ownedComment xmi:type="uml:Comment" xmi:id="_8fc2gJxxEeuSfsyhIF5DRw">
            <body> The Consumer Web site sent a purchase order request to the order processing center (OPC). The OPC processed that request but didnât reply to Consumer Web site within five seconds, so the Consumer Web site resends the request to the OPC. The OPC receives the duplicate request, but the consumer is not double-charged, data remains in a consistent state, and the Consumer Web site is notified that the original request was successful in one hundred percent of the times.</body>
          </ownedComment>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_8rK-UJxxEeuSfsyhIF5DRw" name="Security">
        <packagedElement xmi:type="uml:UseCase" xmi:id="_9bCVAJxxEeuSfsyhIF5DRw" name="QAS5">
          <ownedComment xmi:type="uml:Comment" xmi:id="__vfD4JxxEeuSfsyhIF5DRw">
            <body> Credit approval and payment processing are requested for a new order. In one hundred percent of the cases, the transaction is completed securely and cannot be repudiated by either party. The business goals are to provide customers and business partners confidence in security and to meet contractual, legal, and regulatory obligations for secure credit transactions.</body>
          </ownedComment>
        </packagedElement>
        <packagedElement xmi:type="uml:UseCase" xmi:id="_AAWxcJxyEeuSfsyhIF5DRw" name="QAS6">
          <ownedComment xmi:type="uml:Comment" xmi:id="_GT2IwJxyEeuSfsyhIF5DRw">
            <body>The OPC experiences a flood of calls through the Web Service Broker endpoint that do not correspond to any current orders. In one hundred percent of the times, the system detects the abnormal level of activity, notifies the system administrator, and continues to service requests in a degraded mode.</body>
          </ownedComment>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Gl_BoJxyEeuSfsyhIF5DRw" name="Availability">
        <packagedElement xmi:type="uml:UseCase" xmi:id="_H1h98JxyEeuSfsyhIF5DRw" name="QAS7">
          <ownedComment xmi:type="uml:Comment" xmi:id="_MO_RgJxyEeuSfsyhIF5DRw">
            <body>The Consumer Web site is available to the user 24x7. If an instance of OPC application fails, the fault is detected and the system administrator is notified in 30 seconds; the system continues taking order requests; another OPC instance is created; and data remains in consistent state.</body>
          </ownedComment>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="_AIyesKqqEeuRiIRzpnEATQ" name="4-Allocation">
    <packagedElement xmi:type="uml:Model" xmi:id="_GR_K8KF9Eeu26-oh2DfeGg" name="Deploiement">
      <ownedComment xmi:type="uml:Comment" xmi:id="_tfxkYKISEeuQ_fGpHvaisg">
        <body>All the components that are SOAP web service providers in the Adventure Builder System are implemented using stateless session beans. This type of EJB component can be replicated across machines in a cluster and each machine can also make available a pool of such EJBs. This feature allows scaling of the number of requests it can handle. Horizontal scalability is achievable by adding more machines to the cluster. Vertical scalability is also an option by increasing the capacity of any machine (and then increasing the number of EJB instances in each EJB pool). See EJB configuration discussion in OPC C&amp;C View#Variability Guide.

</body>
      </ownedComment>
      <ownedComment xmi:type="uml:Comment" xmi:id="_0ugWEKqQEeu804Hdqgji2A">
        <body>Nevertheless, the transactions performed by these stateless session beans ultimately require access to the database. The database cannot be easily replicated and may become a performance bottleneck if the number of calls increases beyond expectation.</body>
      </ownedComment>
      <packagedElement xmi:type="uml:Node" xmi:id="_7kMowKIPEeuQ_fGpHvaisg" name="endUserMachine1">
        <ownedComment xmi:type="uml:Comment" xmi:id="_sWZW8KIREeuQ_fGpHvaisg">
          <body>This node is used to represent a user who can access the Adventure Builder application using a PC. It is most likely that he is using a web browser to place or track a purchaseorder.
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Node" xmi:id="_A9GnIKIQEeuQ_fGpHvaisg" name="endUserMachine2">
        <ownedComment xmi:type="uml:Comment" xmi:id="_rAi-UKIREeuQ_fGpHvaisg">
          <body>This node is used to represent a user who can access the Adventure Builder application using a PC. It is most likely that he is using a web browser to place or track a purchaseorder.
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Node" xmi:id="_DSHWsKIQEeuQ_fGpHvaisg" name="svr-web1">
        <nestedClassifier xmi:type="uml:ExecutionEnvironment" xmi:id="_FZFqQKIQEeuQ_fGpHvaisg" name="web1a">
          <ownedComment xmi:type="uml:Comment" xmi:id="_LhwmwKISEeuQ_fGpHvaisg">
            <body></body>
          </ownedComment>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:ExecutionEnvironment" xmi:id="_CoPy8KITEeuQ_fGpHvaisg" name="websphere1">
          <nestedNode xmi:type="uml:ExecutionEnvironment" xmi:id="_HGg1YKIQEeuQ_fGpHvaisg" name="web1B">
            <ownedComment xmi:type="uml:Comment" xmi:id="_L1y9EKISEeuQ_fGpHvaisg">
              <body></body>
            </ownedComment>
          </nestedNode>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Node" xmi:id="_WNbKIKIQEeuQ_fGpHvaisg" name="srv-web2">
        <nestedClassifier xmi:type="uml:ExecutionEnvironment" xmi:id="_J_CaUKITEeuQ_fGpHvaisg" name="websphere2">
          <nestedNode xmi:type="uml:ExecutionEnvironment" xmi:id="_YBfv0KIQEeuQ_fGpHvaisg" name="web2a">
            <ownedComment xmi:type="uml:Comment" xmi:id="_MVAooKISEeuQ_fGpHvaisg">
              <body></body>
            </ownedComment>
          </nestedNode>
          <nestedNode xmi:type="uml:ExecutionEnvironment" xmi:id="_ahEJkKIQEeuQ_fGpHvaisg" name="web2b">
            <ownedComment xmi:type="uml:Comment" xmi:id="_Nil2EKISEeuQ_fGpHvaisg">
              <body></body>
            </ownedComment>
          </nestedNode>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Node" xmi:id="_c2gW8KIQEeuQ_fGpHvaisg" name="svr-db1"/>
      <packagedElement xmi:type="uml:Node" xmi:id="_fB3bQKIQEeuQ_fGpHvaisg" name="svr-db2"/>
      <packagedElement xmi:type="uml:Node" xmi:id="_hZ_wQKIQEeuQ_fGpHvaisg" name="svr-opc">
        <nestedNode xmi:type="uml:ExecutionEnvironment" xmi:id="_EyZO8KIWEeuQ_fGpHvaisg" name="websphere2"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Node" xmi:id="_nVfeUKIQEeuQ_fGpHvaisg" name="svr-dbopc">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-tV5EKIREeuQ_fGpHvaisg">
          <body>This relational database stores purchase orders, invoices coming from the external suppliers and related information. The database server is MySQL configured to use the InnoDB engine.
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Node" xmi:id="_pTW5MKIQEeuQ_fGpHvaisg" name="svr-mailer"/>
      <packagedElement xmi:type="uml:Node" xmi:id="_rKoj4KIQEeuQ_fGpHvaisg" name="bankServerMachine">
        <ownedComment xmi:type="uml:Comment" xmi:id="_tiyRkKIREeuQ_fGpHvaisg">
          <body>TODO. This node is external to the system. It represents the server hosted by a bank that provides services to verify a user's account.
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Node" xmi:id="_tjht4KIQEeuQ_fGpHvaisg" name="arilineProviderServerMachine">
        <ownedComment xmi:type="uml:Comment" xmi:id="_ujzpsKIREeuQ_fGpHvaisg">
          <body>TODO. This node is external to the system. It represents the server hosted by an airlines supplier that provides services to place a transportation purchase order.
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Node" xmi:id="_yxwGQKIQEeuQ_fGpHvaisg" name="lodgingProviderServerMachine">
        <ownedComment xmi:type="uml:Comment" xmi:id="_v3jwkKIREeuQ_fGpHvaisg">
          <body>TODO. This node is external to the system. It represents the server hosted by a lodging supplier that provides services to place a lodging purchase order.
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Node" xmi:id="_1urxcKIQEeuQ_fGpHvaisg" name="activityProviderServerMachine">
        <ownedComment xmi:type="uml:Comment" xmi:id="_2dOdAKIREeuQ_fGpHvaisg">
          <body>TODO. This node is external to the system. It represents the server hosted by an activities supplier that provides services to place an activities purchase order.
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_SX0VEKIREeuQ_fGpHvaisg" memberEnd="_SX08IqIREeuQ_fGpHvaisg _SX1jMKIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_SX08IKIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_SX08IaIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_SX08IqIREeuQ_fGpHvaisg" name="svr-web1" type="_DSHWsKIQEeuQ_fGpHvaisg" association="_SX0VEKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_SX1jMKIREeuQ_fGpHvaisg" name="endusermachine1" type="_7kMowKIPEeuQ_fGpHvaisg" association="_SX0VEKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_TUqX0KIREeuQ_fGpHvaisg" memberEnd="_TUq-4qIREeuQ_fGpHvaisg _TUrl8KIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_TUq-4KIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_TUq-4aIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_TUq-4qIREeuQ_fGpHvaisg" name="srv-web2" type="_WNbKIKIQEeuQ_fGpHvaisg" association="_TUqX0KIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_TUrl8KIREeuQ_fGpHvaisg" name="endusermachine1" type="_7kMowKIPEeuQ_fGpHvaisg" association="_TUqX0KIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_UlUHYKIREeuQ_fGpHvaisg" name="http" memberEnd="_UlUucqIREeuQ_fGpHvaisg _UlVVgKIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_UlUucKIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_UlUucaIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_UlUucqIREeuQ_fGpHvaisg" name="svr-web1" type="_DSHWsKIQEeuQ_fGpHvaisg" association="_UlUHYKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_UlVVgKIREeuQ_fGpHvaisg" name="endusermachine2" type="_A9GnIKIQEeuQ_fGpHvaisg" association="_UlUHYKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_XbtswKIREeuQ_fGpHvaisg" memberEnd="_XbuT0qIREeuQ_fGpHvaisg _Xbu64KIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_XbuT0KIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_XbuT0aIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_XbuT0qIREeuQ_fGpHvaisg" name="srv-web2" type="_WNbKIKIQEeuQ_fGpHvaisg" association="_XbtswKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_Xbu64KIREeuQ_fGpHvaisg" name="endusermachine2" type="_A9GnIKIQEeuQ_fGpHvaisg" association="_XbtswKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_YhC9IKIREeuQ_fGpHvaisg" memberEnd="_YhDkMqIREeuQ_fGpHvaisg _YhELQKIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_YhDkMKIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_YhDkMaIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_YhDkMqIREeuQ_fGpHvaisg" name="svr-db1" type="_c2gW8KIQEeuQ_fGpHvaisg" association="_YhC9IKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_YhELQKIREeuQ_fGpHvaisg" name="svr-web1" type="_DSHWsKIQEeuQ_fGpHvaisg" association="_YhC9IKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_a27PYKIREeuQ_fGpHvaisg" memberEnd="_a272cqIREeuQ_fGpHvaisg _a28dgKIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_a272cKIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_a272caIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_a272cqIREeuQ_fGpHvaisg" name="svr-db2" type="_fB3bQKIQEeuQ_fGpHvaisg" association="_a27PYKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_a28dgKIREeuQ_fGpHvaisg" name="svr-web1" type="_DSHWsKIQEeuQ_fGpHvaisg" association="_a27PYKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_bhEYkKIREeuQ_fGpHvaisg" memberEnd="_bhE_oqIREeuQ_fGpHvaisg _bhFmsKIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_bhE_oKIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_bhE_oaIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_bhE_oqIREeuQ_fGpHvaisg" name="svr-db2" type="_fB3bQKIQEeuQ_fGpHvaisg" association="_bhEYkKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_bhFmsKIREeuQ_fGpHvaisg" name="svr-db1" type="_c2gW8KIQEeuQ_fGpHvaisg" association="_bhEYkKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_deZA4KIREeuQ_fGpHvaisg" memberEnd="_deZn8aIREeuQ_fGpHvaisg _deaPAKIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_deZA4aIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_deZn8KIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_deZn8aIREeuQ_fGpHvaisg" name="svr-db1" type="_c2gW8KIQEeuQ_fGpHvaisg" association="_deZA4KIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_deaPAKIREeuQ_fGpHvaisg" name="srv-web2" type="_WNbKIKIQEeuQ_fGpHvaisg" association="_deZA4KIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_eQLDIKIREeuQ_fGpHvaisg" memberEnd="_eQLqMqIREeuQ_fGpHvaisg _eQLqM6IREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_eQLqMKIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_eQLqMaIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_eQLqMqIREeuQ_fGpHvaisg" name="svr-db2" type="_fB3bQKIQEeuQ_fGpHvaisg" association="_eQLDIKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_eQLqM6IREeuQ_fGpHvaisg" name="srv-web2" type="_WNbKIKIQEeuQ_fGpHvaisg" association="_eQLDIKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_gKs2IKIREeuQ_fGpHvaisg" memberEnd="_gKtdMaIREeuQ_fGpHvaisg _gKuEQKIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_gKs2IaIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_gKtdMKIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_gKtdMaIREeuQ_fGpHvaisg" name="svr-opc" type="_hZ_wQKIQEeuQ_fGpHvaisg" association="_gKs2IKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_gKuEQKIREeuQ_fGpHvaisg" name="svr-web1" type="_DSHWsKIQEeuQ_fGpHvaisg" association="_gKs2IKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_iMnqkKIREeuQ_fGpHvaisg" memberEnd="_iMoRoqIREeuQ_fGpHvaisg _iMo4sKIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_iMoRoKIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_iMoRoaIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_iMoRoqIREeuQ_fGpHvaisg" name="svr-opc" type="_hZ_wQKIQEeuQ_fGpHvaisg" association="_iMnqkKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_iMo4sKIREeuQ_fGpHvaisg" name="srv-web2" type="_WNbKIKIQEeuQ_fGpHvaisg" association="_iMnqkKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_jN3sMKIREeuQ_fGpHvaisg" memberEnd="_jN4TQaIREeuQ_fGpHvaisg _jN4TQqIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_jN3sMaIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_jN4TQKIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_jN4TQaIREeuQ_fGpHvaisg" name="svr-dbopc" type="_nVfeUKIQEeuQ_fGpHvaisg" association="_jN3sMKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_jN4TQqIREeuQ_fGpHvaisg" name="svr-opc" type="_hZ_wQKIQEeuQ_fGpHvaisg" association="_jN3sMKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_j1AksKIREeuQ_fGpHvaisg" memberEnd="_j1BLwqIREeuQ_fGpHvaisg _j1By0KIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_j1BLwKIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_j1BLwaIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_j1BLwqIREeuQ_fGpHvaisg" name="svr-mailer" type="_pTW5MKIQEeuQ_fGpHvaisg" association="_j1AksKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_j1By0KIREeuQ_fGpHvaisg" name="svr-opc" type="_hZ_wQKIQEeuQ_fGpHvaisg" association="_j1AksKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_kvlWkKIREeuQ_fGpHvaisg" memberEnd="_kvl9oqIREeuQ_fGpHvaisg _kvmksKIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_kvl9oKIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_kvl9oaIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_kvl9oqIREeuQ_fGpHvaisg" name="activityproviderservermachine" type="_1urxcKIQEeuQ_fGpHvaisg" association="_kvlWkKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_kvmksKIREeuQ_fGpHvaisg" name="svr-opc" type="_hZ_wQKIQEeuQ_fGpHvaisg" association="_kvlWkKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_lOYLYKIREeuQ_fGpHvaisg" memberEnd="_lOYycqIREeuQ_fGpHvaisg _lOZZgKIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_lOYycKIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_lOYycaIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_lOYycqIREeuQ_fGpHvaisg" name="lodgingproviderservermachine" type="_yxwGQKIQEeuQ_fGpHvaisg" association="_lOYLYKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_lOZZgKIREeuQ_fGpHvaisg" name="svr-opc" type="_hZ_wQKIQEeuQ_fGpHvaisg" association="_lOYLYKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_l5oH0KIREeuQ_fGpHvaisg" memberEnd="_l5oH06IREeuQ_fGpHvaisg _l5ou4KIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_l5oH0aIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_l5oH0qIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_l5oH06IREeuQ_fGpHvaisg" name="arilineproviderservermachine" type="_tjht4KIQEeuQ_fGpHvaisg" association="_l5oH0KIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_l5ou4KIREeuQ_fGpHvaisg" name="svr-opc" type="_hZ_wQKIQEeuQ_fGpHvaisg" association="_l5oH0KIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_mh96MKIREeuQ_fGpHvaisg" memberEnd="_mh-hQqIREeuQ_fGpHvaisg _mh_IUKIREeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_mh-hQKIREeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_mh-hQaIREeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_mh-hQqIREeuQ_fGpHvaisg" name="bankservermachine" type="_rKoj4KIQEeuQ_fGpHvaisg" association="_mh96MKIREeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_mh_IUKIREeuQ_fGpHvaisg" name="svr-opc" type="_hZ_wQKIQEeuQ_fGpHvaisg" association="_mh96MKIREeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Node" xmi:id="__CGBEKIREeuQ_fGpHvaisg" name="ServiceRegistry">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Ao3xoKISEeuQ_fGpHvaisg">
          <body>Data repository that works as a basic registry of the external services used by OPC. More specifically, it has name, location and metadata about all the SOAP web services offered by the banks, airline, lodging, and activity external partners. TBD: use a relational database or XML based files.
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_BGFSEKISEeuQ_fGpHvaisg" memberEnd="_BGF5IqISEeuQ_fGpHvaisg _BGGgMKISEeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_BGF5IKISEeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_BGF5IaISEeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_BGF5IqISEeuQ_fGpHvaisg" name="serviceregistry" type="__CGBEKIREeuQ_fGpHvaisg" association="_BGFSEKISEeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_BGGgMKISEeuQ_fGpHvaisg" name="svr-opc" type="_hZ_wQKIQEeuQ_fGpHvaisg" association="_BGFSEKISEeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Node" xmi:id="_FwBRoKISEeuQ_fGpHvaisg" name="AdminUserMachiine"/>
      <packagedElement xmi:type="uml:Artifact" xmi:id="_RTZ1QKISEeuQ_fGpHvaisg" name="opc.ear">
        <ownedComment xmi:type="uml:Comment" xmi:id="_TZQHcKISEeuQ_fGpHvaisg">
          <body>opc.ear
This is an enterprise archive artifact that is deployed on an application server. It contains the opc application.</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Artifact" xmi:id="_XJKHsKISEeuQ_fGpHvaisg" name="website.ear" fileName="website.ear&#xA;This is an enterprise archive artifact that is deployed on an application server. It contains the consumer website application.">
        <ownedComment xmi:type="uml:Comment" xmi:id="_gqqTIKISEeuQ_fGpHvaisg">
          <body>website.ear
This is an enterprise archive artifact that is deployed on an application server. It contains the consumer website application.</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Manifestation" xmi:id="_b3ffEKISEeuQ_fGpHvaisg" client="_FZFqQKIQEeuQ_fGpHvaisg" supplier="_XJKHsKISEeuQ_fGpHvaisg" utilizedElement="_XJKHsKISEeuQ_fGpHvaisg"/>
      <packagedElement xmi:type="uml:Manifestation" xmi:id="_cwXAwKISEeuQ_fGpHvaisg" client="_HGg1YKIQEeuQ_fGpHvaisg" supplier="_XJKHsKISEeuQ_fGpHvaisg" utilizedElement="_XJKHsKISEeuQ_fGpHvaisg"/>
      <packagedElement xmi:type="uml:Manifestation" xmi:id="_dd2_8KISEeuQ_fGpHvaisg" client="_YBfv0KIQEeuQ_fGpHvaisg" supplier="_XJKHsKISEeuQ_fGpHvaisg" utilizedElement="_XJKHsKISEeuQ_fGpHvaisg"/>
      <packagedElement xmi:type="uml:Manifestation" xmi:id="_eTY5wKISEeuQ_fGpHvaisg" client="_ahEJkKIQEeuQ_fGpHvaisg" supplier="_XJKHsKISEeuQ_fGpHvaisg" utilizedElement="_XJKHsKISEeuQ_fGpHvaisg"/>
      <packagedElement xmi:type="uml:Artifact" xmi:id="_UkWMIKITEeuQ_fGpHvaisg" name="AdventureDBCatalog">
        <ownedComment xmi:type="uml:Comment" xmi:id="_XRrNsKIWEeuQ_fGpHvaisg">
          <body>This is a relational database that stores the adventure builder catalog containing various adventure packages. It also stores information about users for user authentication and authorization. The database server is MySQL Cluster 7.0 configured to use the InnoDB engine.
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Manifestation" xmi:id="_XzLfoKITEeuQ_fGpHvaisg" client="_GR_K8KF9Eeu26-oh2DfeGg" supplier="_UkWMIKITEeuQ_fGpHvaisg" utilizedElement="_UkWMIKITEeuQ_fGpHvaisg"/>
      <packagedElement xmi:type="uml:Manifestation" xmi:id="_ZI9m0KITEeuQ_fGpHvaisg" client="_fB3bQKIQEeuQ_fGpHvaisg" supplier="_UkWMIKITEeuQ_fGpHvaisg" utilizedElement="_UkWMIKITEeuQ_fGpHvaisg"/>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_W70H4KIVEeuQ_fGpHvaisg" memberEnd="_W70u8qIVEeuQ_fGpHvaisg _W71WAKIVEeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_W70u8KIVEeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_W70u8aIVEeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_W70u8qIVEeuQ_fGpHvaisg" name="svr-db1" type="_c2gW8KIQEeuQ_fGpHvaisg" association="_W70H4KIVEeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_W71WAKIVEeuQ_fGpHvaisg" name="svr-opc" type="_hZ_wQKIQEeuQ_fGpHvaisg" association="_W70H4KIVEeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Manifestation" xmi:id="_5D5ngKIVEeuQ_fGpHvaisg" client="_CoPy8KITEeuQ_fGpHvaisg" supplier="_XJKHsKISEeuQ_fGpHvaisg" utilizedElement="_XJKHsKISEeuQ_fGpHvaisg"/>
      <packagedElement xmi:type="uml:Manifestation" xmi:id="_Hvvw4KIWEeuQ_fGpHvaisg" client="_EyZO8KIWEeuQ_fGpHvaisg" supplier="_RTZ1QKISEeuQ_fGpHvaisg" utilizedElement="_RTZ1QKISEeuQ_fGpHvaisg"/>
      <packagedElement xmi:type="uml:Manifestation" xmi:id="_K1R-cKIWEeuQ_fGpHvaisg" client="_c2gW8KIQEeuQ_fGpHvaisg" supplier="_UkWMIKITEeuQ_fGpHvaisg" utilizedElement="_UkWMIKITEeuQ_fGpHvaisg"/>
      <packagedElement xmi:type="uml:CommunicationPath" xmi:id="_c0Z2cKIWEeuQ_fGpHvaisg" memberEnd="_c0adgqIWEeuQ_fGpHvaisg _c0bEkKIWEeuQ_fGpHvaisg">
        <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_c0adgKIWEeuQ_fGpHvaisg" source="org.eclipse.papyrus">
          <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_c0adgaIWEeuQ_fGpHvaisg" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:type="uml:Property" xmi:id="_c0adgqIWEeuQ_fGpHvaisg" name="websphere1" type="_DSHWsKIQEeuQ_fGpHvaisg" association="_c0Z2cKIWEeuQ_fGpHvaisg"/>
        <ownedEnd xmi:type="uml:Property" xmi:id="_c0bEkKIWEeuQ_fGpHvaisg" name="adminusermachiine" type="_FwBRoKISEeuQ_fGpHvaisg" association="_c0Z2cKIWEeuQ_fGpHvaisg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:ExecutionEnvironment" xmi:id="_Sgr0UKqwEeuRiIRzpnEATQ" name="UserMailClient">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Sgr0UaqwEeuRiIRzpnEATQ">
          <body>This is the email inbox of the end user (vacationer) who placed an adventure travel purchase request. OPC sends email notifications to the user via SMTP to inform of the status of the orders.

Email communication
All email communication parameters (hostname, ports and protocol) should be configurable outside the code via a configuration file. The parameters are read at load time.
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:ExecutionEnvironment" xmi:id="_SgsbYKqwEeuRiIRzpnEATQ" name="WebBrowser">
        <ownedComment xmi:type="uml:Comment" xmi:id="_SgsbYaqwEeuRiIRzpnEATQ">
          <body>This component represents the user interface of the application running on a web browser. Consumer Website is a Web 2.0 application implemented using GWT. Therefore, in addition to HTML, the web browser runs JavaScript code that uses Ajax to communicate with the server. Using the web browser, a customer of Adventure Builder opens the web site, browses through the existing catalog of adventure packages, places orders, and tracks the status of existing orders.</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:ExecutionEnvironment" xmi:id="_Wasy0KqwEeuRiIRzpnEATQ" name="CopyOf_UserMailClient_51">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Wasy0aqwEeuRiIRzpnEATQ">
          <body>This is the email inbox of the end user (vacationer) who placed an adventure travel purchase request. OPC sends email notifications to the user via SMTP to inform of the status of the orders.

Email communication
All email communication parameters (hostname, ports and protocol) should be configurable outside the code via a configuration file. The parameters are read at load time.
</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:ExecutionEnvironment" xmi:id="_WatZ4KqwEeuRiIRzpnEATQ" name="CopyOf_WebBrowser_51">
        <ownedComment xmi:type="uml:Comment" xmi:id="_WatZ4aqwEeuRiIRzpnEATQ">
          <body>This component represents the user interface of the application running on a web browser. Consumer Website is a Web 2.0 application implemented using GWT. Therefore, in addition to HTML, the web browser runs JavaScript code that uses Ajax to communicate with the server. Using the web browser, a customer of Adventure Builder opens the web site, browses through the existing catalog of adventure packages, places orders, and tracks the status of existing orders.</body>
        </ownedComment>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_RkIY8JxsEeuSfsyhIF5DRw">
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_RkJnEZxsEeuSfsyhIF5DRw" source="PapyrusVersion">
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_RkJnEpxsEeuSfsyhIF5DRw" key="Version" value="0.0.1"/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_RkJnE5xsEeuSfsyhIF5DRw" key="Comment" value=""/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_RkJnFJxsEeuSfsyhIF5DRw" key="Copyright" value="CEA LIST - Initial API and Implementation&#xD;&#xA;"/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_RkJnFZxsEeuSfsyhIF5DRw" key="Date" value="2012-12-07"/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_RkJnFpxsEeuSfsyhIF5DRw" key="Author" value=""/>
    </eAnnotations>
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_RkJnEJxsEeuSfsyhIF5DRw" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_INTERNAL_PROFILES/PapyrusInternal.profile.uml#_eijPgUBcEeKj6r7ThQagKA"/>
    </eAnnotations>
    <appliedProfile xmi:type="uml:Profile" href="pathmap://PAPYRUS_INTERNAL_PROFILES/PapyrusInternal.profile.uml#_dL4lkPXAEeGSQON-DQ-5eg"/>
  </profileApplication>
  <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_RkKOIJxsEeuSfsyhIF5DRw">
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_RkKOIZxsEeuSfsyhIF5DRw" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/documentation#/"/>
    </eAnnotations>
    <appliedProfile xmi:type="uml:Profile" href="pathmap://PAPYRUS_DOCUMENTATION/Papyrus.profile.uml#_H9068AEYEeCIz8iAxBJnfA"/>
  </profileApplication>
</uml:Model>
